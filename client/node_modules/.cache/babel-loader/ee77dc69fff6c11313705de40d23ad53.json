{"ast":null,"code":"var _jsxFileName = \"/home/linux/Documents/IMIN/AUGUST-16/client/src/pages/Login.tsx\";\nimport { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Card, Form, Button } from 'react-bootstrap';\nimport Navigation from '../components/Navigation';\nimport { setLogin } from '../store/hooks';\nimport Api from '../api/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        user: { ...this.state.user,\n          [name]: value\n        }\n      });\n    };\n\n    this.submit = async () => {\n      try {\n        const api = new Api(this.state.user);\n        const data = await api.login();\n\n        if (data) {\n          const {\n            token\n          } = data;\n          const isValid = await api.tokenValidator(token);\n\n          if (isValid) {\n            console.log(isValid);\n            this.props.history.push('/home'); // window.location.reload()\n          }\n        }\n      } catch (error) {\n        const {\n          data\n        } = error.response;\n        alert(data.message);\n      }\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"form\",\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  name: \"email\",\n                  onChange: this.getChange,\n                  placeholder: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  name: \"password\",\n                  onChange: this.getChange,\n                  placeholder: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.submit,\n                variant: \"dark\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.state = {\n      user: {\n        email: '',\n        password: ''\n      }\n    };\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setLogin: () => dispatch(setLogin())\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(Login));","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-16/client/src/pages/Login.tsx"],"names":["Component","connect","withRouter","Card","Form","Button","Navigation","setLogin","Api","Login","constructor","props","getChange","e","name","value","target","setState","user","state","submit","api","data","login","token","isValid","tokenValidator","console","log","history","push","error","response","alert","message","render","email","password","mapDispatchToProps","dispatch"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,iBAAnC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,YAAhB;;;;AAMA,MAAMC,KAAN,SAAoBT,SAApB,CAA0C;AAGtCU,EAAAA,WAAW,CAACC,KAAD,EAAa;AACpB,UAAMA,KAAN;;AADoB,SAUxBC,SAVwB,GAUXC,CAAD,IAAkB;AAC1B,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBF,CAAC,CAACG,MAA1B;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,IAAI,EAAE,EAAE,GAAG,KAAKC,KAAL,CAAWD,IAAhB;AAAsB,WAACJ,IAAD,GAAQC;AAA9B;AADI,OAAd;AAGH,KAfuB;;AAAA,SAiBxBK,MAjBwB,GAiBf,YAA2B;AAEhC,UAAI;AAEA,cAAMC,GAAG,GAAG,IAAIb,GAAJ,CAAQ,KAAKW,KAAL,CAAWD,IAAnB,CAAZ;AACA,cAAMI,IAAS,GAAG,MAAMD,GAAG,CAACE,KAAJ,EAAxB;;AAEA,YAAID,IAAJ,EAAU;AACN,gBAAM;AAAEE,YAAAA;AAAF,cAAYF,IAAlB;AACA,gBAAMG,OAAO,GAAG,MAAMJ,GAAG,CAACK,cAAJ,CAAmBF,KAAnB,CAAtB;;AACA,cAAIC,OAAJ,EAAa;AACTE,YAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,iBAAKd,KAAL,CAAWkB,OAAX,CAAmBC,IAAnB,CAAwB,OAAxB,EAFS,CAGT;AACH;AACJ;AAEJ,OAfD,CAeE,OAAOC,KAAP,EAAc;AACZ,cAAM;AAAET,UAAAA;AAAF,YAAWS,KAAK,CAACC,QAAvB;AACAC,QAAAA,KAAK,CAACX,IAAI,CAACY,OAAN,CAAL;AACH;AAEJ,KAvCuB;;AAAA,SAyCxBC,MAzCwB,GAyCf,MAAmB;AACxB,0BACI;AAAA,gCACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAA,mCACI,QAAC,IAAD;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI,QAAC,IAAD,CAAM,KAAN;AAAA,uCACI,QAAC,IAAD,CAAM,OAAN;AAAc,kBAAA,IAAI,EAAC,OAAnB;AAA2B,kBAAA,IAAI,EAAC,OAAhC;AAAwC,kBAAA,QAAQ,EAAE,KAAKvB,SAAvD;AAAkE,kBAAA,WAAW,EAAC;AAA9E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAMI;AAAA;AAAA;AAAA;AAAA,sBANJ,eAOI,QAAC,IAAD,CAAM,KAAN;AAAA,uCACI,QAAC,IAAD,CAAM,OAAN;AAAc,kBAAA,IAAI,EAAC,UAAnB;AAA8B,kBAAA,IAAI,EAAC,UAAnC;AAA8C,kBAAA,QAAQ,EAAE,KAAKA,SAA7D;AAAwE,kBAAA,WAAW,EAAC;AAApF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAPJ,eAUI;AAAA;AAAA;AAAA;AAAA,sBAVJ,eAWI,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAE,KAAKQ,MAAtB;AAA8B,gBAAA,OAAO,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,sBADJ;AAsBH,KAhEuB;;AAEpB,SAAKD,KAAL,GAAa;AACTD,MAAAA,IAAI,EAAE;AACFkB,QAAAA,KAAK,EAAE,EADL;AAEFC,QAAAA,QAAQ,EAAE;AAFR;AADG,KAAb;AAMH;;AAXqC;;AAuE1C,MAAMC,kBAAkB,GAAIC,QAAD,KAAoB;AAC3ChC,EAAAA,QAAQ,EAAE,MAAMgC,QAAQ,CAAChC,QAAQ,EAAT;AADmB,CAApB,CAA3B;;AAKA,eAAeL,UAAU,CAACD,OAAO,CAAC,IAAD,EAAOqC,kBAAP,CAAP,CAAkC7B,KAAlC,CAAD,CAAzB","sourcesContent":["import { Component } from \"react\"\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { Card, Form, Button } from 'react-bootstrap'\nimport Navigation from '../components/Navigation'\nimport { setLogin } from '../store/hooks'\nimport Api from '../api/Api'\n\ninterface State {\n    user: any\n}\n\nclass Login extends Component<any, State> {\n\n\n    constructor(props: any) {\n        super(props)\n        this.state = {\n            user: {\n                email: '' as string,\n                password: '' as string\n            }\n        }\n    }\n\n    getChange = (e: any): void => {\n        const { name, value } = e.target\n        this.setState({\n            user: { ...this.state.user, [name]: value }\n        })\n    }\n\n    submit = async (): Promise<void> => {\n\n        try {\n\n            const api = new Api(this.state.user)\n            const data: any = await api.login()\n\n            if (data) {\n                const { token } = data\n                const isValid = await api.tokenValidator(token)\n                if (isValid) {\n                    console.log(isValid)\n                    this.props.history.push('/home')\n                    // window.location.reload()\n                }\n            }\n\n        } catch (error) {\n            const { data } = error.response\n            alert(data.message)\n        }\n\n    }\n\n    render = (): JSX.Element => {\n        return (\n            <>\n                <Navigation />\n                <div className=\"App\">\n                    <Card className=\"form\">\n                        <Form>\n                            <h3>Login</h3>\n                            <br />\n                            <Form.Group>\n                                <Form.Control type=\"email\" name=\"email\" onChange={this.getChange} placeholder=\"Email\" />\n                            </Form.Group>\n                            <br />\n                            <Form.Group>\n                                <Form.Control type=\"password\" name=\"password\" onChange={this.getChange} placeholder=\"Password\" />\n                            </Form.Group>\n                            <br />\n                            <Button onClick={this.submit} variant=\"dark\" >Login</Button>\n                        </Form>\n                    </Card>\n                </div>\n            </>\n        )\n    }\n\n}\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    setLogin: () => dispatch(setLogin())\n})\n\n\nexport default withRouter(connect(null, mapDispatchToProps)(Login))"]},"metadata":{},"sourceType":"module"}