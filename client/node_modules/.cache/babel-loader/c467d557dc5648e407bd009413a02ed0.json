{"ast":null,"code":"var _jsxFileName = \"/home/linux/Documents/IMIN/AUGUST-04/client/src/pages/Index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setIndexPost, setContent, setDisplay } from '../store/data';\nimport { Container, Row, Col, Card, Alert, Button } from 'react-bootstrap';\nimport Navigation from '../components/Navigation';\nimport Pagination from '../components/Pagination';\nimport Api from '../api/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const {\n    index_post\n  } = useSelector(state => state.data);\n  const {\n    page,\n    display\n  } = useSelector(state => state.page);\n  const {\n    skip,\n    take\n  } = page;\n  const countPosts = index_post[1];\n  const count = Math.ceil(countPosts / page.take);\n  useEffect(() => {\n    const fetch = async () => {\n      setLoading(true);\n      const api = new Api({});\n      const data = await api.index({\n        skip,\n        take\n      });\n      dispatch(setIndexPost(data));\n    };\n\n    fetch();\n  }, [dispatch, setLoading, skip, take]); // Read More button\n\n  const content_text = [];\n  let getNumber = 0;\n\n  const content = text => {\n    const slicer = text.slice(0, 200);\n    const words = text.match(/(\\w+)/g).length;\n\n    if (words >= 100) {\n      content_text.push(text);\n    } // return words <= 100 ? text : `${slicer}...`\n\n\n    if (words <= 100) {\n      return text;\n    } else {\n      // if (display === false) {\n      //     return text\n      // } else {\n      //     return `${slicer}...`\n      // }\n      return `${slicer}...`;\n    }\n  };\n\n  const displayfull = e => {\n    let {\n      textContent,\n      id\n    } = e.target;\n    const data_id = document.getElementById(id);\n    const thisButton = document.getElementsByClassName('thisButton');\n    const {\n      parentNode\n    } = data_id;\n    const parentDiv = parentNode.childNodes[0];\n    const text_content = parentDiv.childNodes[4];\n    dispatch(setContent(content_text));\n    dispatch(setDisplay(!display));\n    console.log(thisButton[parseInt(id)]);\n\n    if (textContent === 'Read More') {\n      text_content.innerHTML = 'Long';\n      data_id.innerHTML = 'Show less';\n    } else {\n      text_content.innerHTML = 'Short';\n      data_id.innerHTML = 'Read More';\n    }\n  };\n\n  const displayRead = text => {\n    const words = text.match(/(\\w+)/g).length;\n    getNumber++;\n    return words > 100 ? /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"dark\",\n      className: \"thisButton\",\n      id: `${getNumber}`,\n      onClick: displayfull,\n      children: \"Read More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 30\n    }, this) : null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: true,\n            children: loading ? index_post[0].map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"App blogs\",\n              children: [/*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: [\"By : \", result.infouser.username]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: [\"Last update : \", result.updatedAt]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: result.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    className: \"content\",\n                    children: content(result.content)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 45\n                }, this), displayRead(result.content)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 41\n              }, this)]\n            }, result.uuid, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 37\n            }, this)) : /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"success\",\n              children: \"Data sedang diproses... \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      count: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Index, \"7w1XNN8gea3yn7bYqsDgJuUIzEU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-04/client/src/pages/Index.tsx"],"names":["useEffect","useState","useDispatch","useSelector","setIndexPost","setContent","setDisplay","Container","Row","Col","Card","Alert","Button","Navigation","Pagination","Api","Index","dispatch","loading","setLoading","index_post","state","data","page","display","skip","take","countPosts","count","Math","ceil","fetch","api","index","content_text","getNumber","content","text","slicer","slice","words","match","length","push","displayfull","e","textContent","id","target","data_id","document","getElementById","thisButton","getElementsByClassName","parentNode","parentDiv","childNodes","text_content","console","log","parseInt","innerHTML","displayRead","map","result","infouser","username","updatedAt","title","uuid"],"mappings":"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","sourcesContent":["import { FC, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setIndexPost, setContent, setDisplay } from '../store/data'\nimport { Container, Row, Col, Card, Alert, Button } from 'react-bootstrap'\nimport Navigation from '../components/Navigation'\nimport Pagination from '../components/Pagination'\nimport Api from '../api/Api'\n\n\nconst Index: FC = () => {\n\n    const dispatch = useDispatch()\n    const [loading, setLoading] = useState<boolean>(false)\n    const { index_post }: any = useSelector((state: any) => state.data)\n    const { page, display } = useSelector((state: any) => state.page)\n    const { skip, take } = page\n\n    const countPosts = index_post[1]\n    const count = Math.ceil(countPosts / page.take)\n\n    useEffect(() => {\n        const fetch = async (): Promise<void> => {\n            setLoading(true)\n            const api = new Api({})\n            const data = await api.index({ skip, take })\n            dispatch(setIndexPost(data))\n        }\n        fetch()\n    }, [dispatch, setLoading, skip, take])\n\n\n    // Read More button\n\n    const content_text: any = []\n    let getNumber = 0\n\n    const content = (text: any) => {\n        const slicer = text.slice(0, 200)\n        const words = text.match(/(\\w+)/g).length\n\n        if (words >= 100) {\n            content_text.push(text)\n        }\n\n        // return words <= 100 ? text : `${slicer}...`\n\n        if (words <= 100) {\n            return text\n        } else {\n            // if (display === false) {\n            //     return text\n            // } else {\n            //     return `${slicer}...`\n            // }\n            return `${slicer}...`\n        }\n    }\n\n    const displayfull = (e: any) => {\n        let { textContent, id } = e.target\n        const data_id: any = document.getElementById(id)\n        const thisButton: any = document.getElementsByClassName('thisButton')\n        const { parentNode } = data_id\n        const parentDiv = parentNode.childNodes[0]\n        const text_content = parentDiv.childNodes[4]\n\n        dispatch(setContent(content_text))\n        dispatch(setDisplay(!display))\n\n        console.log(thisButton[parseInt(id)])\n\n\n        if (textContent === 'Read More') {\n            text_content.innerHTML = 'Long'\n            data_id.innerHTML = 'Show less'\n        } else {\n            text_content.innerHTML = 'Short'\n            data_id.innerHTML = 'Read More'\n        }\n    }\n\n    const displayRead: any = (text: any) => {\n        const words = text.match(/(\\w+)/g).length\n        getNumber++\n        return words > 100 ? <Button variant=\"dark\" className=\"thisButton\" id={`${getNumber}`} onClick={displayfull}>Read More</Button> : null\n    }\n\n    return (\n        <>\n            <Navigation />\n            <div className=\"App\">\n                <Container>\n                    <Row>\n                        <Col md>\n                            {loading ?\n                                index_post[0].map((result: any) =>\n                                    <div className='App blogs' key={result.uuid}>\n                                        <Card>\n                                            <Card.Body>\n                                                <Card.Text>\n                                                    By : {result.infouser.username}\n                                                </Card.Text>\n                                                <Card.Text>\n                                                    Last update : {result.updatedAt}\n                                                </Card.Text>\n                                                <Card.Title>\n                                                    {result.title}\n                                                </Card.Title>\n                                                <hr />\n                                                <Card.Text className=\"content\">\n                                                    {content(result.content)}\n                                                </Card.Text>\n                                            </Card.Body>\n                                            {displayRead(result.content)}\n                                        </Card>\n                                        <br />\n                                    </div>\n                                ) : <Alert variant=\"success\">Data sedang diproses... </Alert>\n                            }\n                        </Col>\n                    </Row>\n                </Container>\n            </ div>\n            <Pagination count={count} />\n        </>\n    )\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}