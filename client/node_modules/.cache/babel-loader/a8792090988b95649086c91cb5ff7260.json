{"ast":null,"code":"var _jsxFileName = \"/home/linux/Documents/IMIN/AUGUST-16/client/src/pages/Try.tsx\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setButtonNumber, reset } from '../store/hooks';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Try extends Component {\n  constructor(props) {\n    super(props);\n    this.setButtonNumber = this.props.setButtonNumber;\n    this.reset = this.props.reset;\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Number : \", this.props.page.button_number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.setButtonNumber(),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), \" \", ' ', /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.reset(),\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this);\n    };\n\n    console.log(this.props);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  page: state.page\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setButtonNumber: () => dispatch(setButtonNumber()),\n    reset: () => dispatch(reset())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Try);","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-16/client/src/pages/Try.tsx"],"names":["Component","connect","setButtonNumber","reset","Button","Try","constructor","props","render","page","button_number","console","log","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,EAA0BC,KAA1B,QAAuC,gBAAvC;AACA,SAASC,MAAT,QAAuB,iBAAvB;;;AAUA,MAAMC,GAAN,SAAkBL,SAAlB,CAAkC;AAK9BM,EAAAA,WAAW,CAACC,KAAD,EAAa;AACpB,UAAMA,KAAN;AADoB,SAHxBL,eAGwB,GAHN,KAAKK,KAAL,CAAWL,eAGL;AAAA,SAFxBC,KAEwB,GAFhB,KAAKI,KAAL,CAAWJ,KAEK;;AAAA,SAMxBK,MANwB,GAMf,MAAM;AAGX,0BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI;AAAA,kCAAc,KAAKD,KAAL,CAAWE,IAAX,CAAgBC,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKR,eAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,OAEiE,GAFjE,eAGI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKC,KAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KAhBuB;;AAGpBQ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;AACH;;AAT6B;;AAwBlC,MAAMM,eAAe,GAAIC,KAAD,KAAiB;AACrCL,EAAAA,IAAI,EAAEK,KAAK,CAACL;AADyB,CAAjB,CAAxB;;AAIA,MAAMM,kBAAkB,GAAIC,QAAD,IAAmB;AAC1C,SAAO;AACHd,IAAAA,eAAe,EAAE,MAAMc,QAAQ,CAACd,eAAe,EAAhB,CAD5B;AAEHC,IAAAA,KAAK,EAAE,MAAMa,QAAQ,CAACb,KAAK,EAAN;AAFlB,GAAP;AAIH,CALD;;AAOA,eAAeF,OAAO,CAACY,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,GAA7C,CAAf","sourcesContent":["import { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { setButtonNumber, reset } from '../store/hooks'\nimport { Button } from 'react-bootstrap'\n\ninterface Props {\n    page: {\n        button_number: number\n    }\n    setButtonNumber: any\n    reset: any\n}\n\nclass Try extends Component<Props>{\n\n    setButtonNumber = this.props.setButtonNumber\n    reset = this.props.reset\n\n    constructor(props: any) {\n        super(props)\n\n        console.log(this.props)\n    }\n\n    render = () => {\n\n\n        return (\n            <div className=\"App\">\n                <h1>Number : {this.props.page.button_number}</h1>\n                <Button onClick={() => this.setButtonNumber()}>Add</Button> {' '}\n                <Button onClick={() => this.reset()}>Reset</Button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: any) => ({\n    page: state.page\n})\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setButtonNumber: () => dispatch(setButtonNumber()),\n        reset: () => dispatch(reset())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Try)"]},"metadata":{},"sourceType":"module"}