{"ast":null,"code":"var _jsxFileName = \"/home/linux/Documents/IMIN/AUGUST-16/client/src/pages/Myblogs.tsx\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Navigation from '../components/Navigation';\nimport { setMyPost } from '../store/hooks';\nimport Api from '../api/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Myblogs extends Component {\n  constructor(...args) {\n    super(...args);\n    this.myPost = this.props.data.myPost;\n    this.user = this.props.data.user;\n    this.data = void 0;\n\n    this.componentDidMount = async () => {\n      const {\n        blogs\n      } = this.props.data;\n      const {\n        uuid\n      } = this.user;\n      const {\n        currentPage,\n        take\n      } = blogs;\n      const data = {\n        uuid,\n        currentPage,\n        take\n      };\n\n      try {\n        const api = new Api(data);\n        const result = await api.myBlogs();\n\n        if (result) {\n          console.log(result);\n        }\n      } catch (error) {\n        const {\n          data\n        } = error.response;\n        alert(data.message);\n      }\n    };\n\n    this.render = () => {\n      // console.log(this.myPost)\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"My blogs!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    };\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setMyPost: data => dispatch(setMyPost(data))\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Myblogs));","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-16/client/src/pages/Myblogs.tsx"],"names":["Component","connect","withRouter","Navigation","setMyPost","Api","Myblogs","myPost","props","data","user","componentDidMount","blogs","uuid","currentPage","take","api","result","myBlogs","console","log","error","response","alert","message","render","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,OAAOC,GAAP,MAAgB,YAAhB;;;;AAYA,MAAMC,OAAN,SAAsBN,SAAtB,CAA6C;AAAA;AAAA;AAAA,SAEzCO,MAFyC,GAE3B,KAAKC,KAAL,CAAWC,IAAX,CAAgBF,MAFW;AAAA,SAGzCG,IAHyC,GAG7B,KAAKF,KAAL,CAAWC,IAAX,CAAgBC,IAHa;AAAA,SAIzCD,IAJyC;;AAAA,SAMzCE,iBANyC,GAMrB,YAAY;AAC5B,YAAM;AAAEC,QAAAA;AAAF,UAAY,KAAKJ,KAAL,CAAWC,IAA7B;AACA,YAAM;AAAEI,QAAAA;AAAF,UAAW,KAAKH,IAAtB;AACA,YAAM;AAAEI,QAAAA,WAAF;AAAeC,QAAAA;AAAf,UAAwBH,KAA9B;AACA,YAAMH,IAAI,GAAG;AAAEI,QAAAA,IAAF;AAAQC,QAAAA,WAAR;AAAqBC,QAAAA;AAArB,OAAb;;AAEA,UAAI;AACA,cAAMC,GAAG,GAAG,IAAIX,GAAJ,CAAQI,IAAR,CAAZ;AACA,cAAMQ,MAAW,GAAG,MAAMD,GAAG,CAACE,OAAJ,EAA1B;;AACA,YAAID,MAAJ,EAAY;AACRE,UAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACH;AACJ,OAND,CAME,OAAOI,KAAP,EAAc;AACZ,cAAM;AAAEZ,UAAAA;AAAF,YAAWY,KAAK,CAACC,QAAvB;AACAC,QAAAA,KAAK,CAACd,IAAI,CAACe,OAAN,CAAL;AACH;AACJ,KAtBwC;;AAAA,SAwBzCC,MAxByC,GAwBhC,MAAM;AAEX;AAGA,0BACI;AAAA,gCACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,sBADJ;AAwCH,KArEwC;AAAA;;AAAA;;AAyE7C,MAAMC,eAAe,GAAIC,KAAD,KAAiB;AACrClB,EAAAA,IAAI,EAAEkB,KAAK,CAAClB;AADyB,CAAjB,CAAxB;;AAIA,MAAMmB,kBAAkB,GAAIC,QAAD,KAAoB;AAC3CzB,EAAAA,SAAS,EAAGK,IAAD,IAAeoB,QAAQ,CAACzB,SAAS,CAACK,IAAD,CAAV;AADS,CAApB,CAA3B;;AAIA,eAAeP,UAAU,CAACD,OAAO,CAACyB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CtB,OAA7C,CAAD,CAAzB","sourcesContent":["import { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap'\nimport { withRouter } from 'react-router-dom'\nimport Navigation from '../components/Navigation'\nimport { setMyPost } from '../store/hooks'\nimport Api from '../api/Api'\n\n\ninterface Props {\n    data: {\n        user: any\n        myPost: any\n    }\n    setMypost: any\n}\n\n\nclass Myblogs extends Component<Props | any> {\n\n    myPost: any = this.props.data.myPost\n    user: any = this.props.data.user\n    data: any\n\n    componentDidMount = async () => {\n        const { blogs } = this.props.data\n        const { uuid } = this.user\n        const { currentPage, take } = blogs\n        const data = { uuid, currentPage, take }\n\n        try {\n            const api = new Api(data)\n            const result: any = await api.myBlogs()\n            if (result) {\n                console.log(result)\n            }\n        } catch (error) {\n            const { data } = error.response\n            alert(data.message)\n        }\n    }\n\n    render = () => {\n\n        // console.log(this.myPost)\n\n\n        return (\n            <>\n                <Navigation />\n                <div className=\"App\">\n                    <h1>My blogs!</h1>\n                    {/* <Container>\n                        <Row>\n                            <Col md>\n                                {loading ?\n                                    this.props.page.index_post[0].map((result: any) =>\n                                        <div className='App blogs' key={result.uuid}>\n                                            <Card>\n                                                <Card.Body>\n                                                    <Card.Text>\n                                                        By : {result.infouser.username}\n                                                    </Card.Text>\n                                                    <Card.Text>\n                                                        Last update : {result.updatedAt}\n                                                    </Card.Text>\n                                                    <Card.Title>\n                                                        {result.title}\n                                                    </Card.Title>\n                                                    <hr />\n                                                    <Card.Text className=\"content\">\n                                                        {hidden.textBody(result.content)}\n                                                    </Card.Text>\n                                                </Card.Body>\n                                                <HiddenButton text={result.content} />\n                                            </Card>\n                                            <br />\n                                        </div>\n                                    ) : <Alert variant=\"success\">Processing data... </Alert>\n                                }\n                            </Col>\n                        </Row>\n                    </Container>\n                    <Paginate /> */}\n                </div>\n            </>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state: any) => ({\n    data: state.data\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    setMyPost: (data: any) => dispatch(setMyPost(data))\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Myblogs))\n"]},"metadata":{},"sourceType":"module"}