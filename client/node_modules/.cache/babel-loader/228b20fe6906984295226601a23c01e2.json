{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const dataUser = createSlice({\n  name: 'blogs',\n  initialState: {\n    token_keys: {},\n    user: {},\n    display: true,\n    page: {\n      currentPage: 1,\n      skip: 0,\n      take: 4\n    },\n    edit_post: {\n      infouser: {\n        username: ''\n      },\n      updatedAt: '',\n      title: '',\n      content: ''\n    },\n    index_post: [],\n    myPost: [[], 0]\n  },\n  reducers: {\n    firstPage: state => {\n      state.page.currentPage = 1;\n      state.page.skip = state.page.currentPage * state.page.take - state.page.take;\n    },\n    lastPage: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.page.currentPage = payload;\n      state.page.skip = state.page.currentPage * state.page.take - state.page.take;\n    },\n    nextPage: state => {\n      state.page.currentPage += 1;\n      state.page.skip = state.page.currentPage * state.page.take - state.page.take;\n    },\n    previousPage: state => {\n      state.page.currentPage -= 1;\n      state.page.skip = state.page.currentPage * state.page.take - state.page.take;\n    },\n    setDisplay: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.display = payload;\n    },\n    setIndexPost: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.index_post = payload;\n    },\n    setMyPost: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.myPost = payload;\n    },\n    setEditPost: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.edit_post = payload;\n    },\n    setDataUser: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.user = payload;\n    },\n    setTokenKeys: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.token_keys = payload;\n    },\n    reset: state => {\n      state.user = {};\n      state.token_keys = {};\n      state.myPost = [[], 0];\n    }\n  }\n});\nexport const {\n  setDataUser,\n  reset,\n  setIndexPost,\n  setMyPost,\n  setTokenKeys,\n  setEditPost,\n  setDisplay,\n  nextPage,\n  previousPage,\n  firstPage,\n  lastPage\n} = dataUser.actions;\nexport default dataUser.reducer;","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-04/client/src/store/data.ts"],"names":["createSlice","dataUser","name","initialState","token_keys","user","display","page","currentPage","skip","take","edit_post","infouser","username","updatedAt","title","content","index_post","myPost","reducers","firstPage","state","lastPage","action","payload","nextPage","previousPage","setDisplay","setIndexPost","setMyPost","setEditPost","setDataUser","setTokenKeys","reset","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,QAAQ,GAAGD,WAAW,CAAC;AAEhCE,EAAAA,IAAI,EAAE,OAF0B;AAGhCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,UAAU,EAAE,EADF;AAEVC,IAAAA,IAAI,EAAE,EAFI;AAGVC,IAAAA,OAAO,EAAE,IAHC;AAKVC,IAAAA,IAAI,EAAE;AACFC,MAAAA,WAAW,EAAE,CADX;AAEFC,MAAAA,IAAI,EAAE,CAFJ;AAGFC,MAAAA,IAAI,EAAE;AAHJ,KALI;AAWVC,IAAAA,SAAS,EAAE;AACPC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OADH;AAEPC,MAAAA,SAAS,EAAE,EAFJ;AAGPC,MAAAA,KAAK,EAAE,EAHA;AAIPC,MAAAA,OAAO,EAAE;AAJF,KAXD;AAkBVC,IAAAA,UAAU,EAAE,EAlBF;AAmBVC,IAAAA,MAAM,EAAE,CAAC,EAAD,EAAK,CAAL;AAnBE,GAHkB;AAyBhCC,EAAAA,QAAQ,EAAE;AAENC,IAAAA,SAAS,EAAEC,KAAK,IAAI;AAChBA,MAAAA,KAAK,CAACd,IAAN,CAAWC,WAAX,GAAyB,CAAzB;AACAa,MAAAA,KAAK,CAACd,IAAN,CAAWE,IAAX,GAAmBY,KAAK,CAACd,IAAN,CAAWC,WAAX,GAAyBa,KAAK,CAACd,IAAN,CAAWG,IAArC,GAA6CW,KAAK,CAACd,IAAN,CAAWG,IAA1E;AACH,KALK;AAONY,IAAAA,QAAQ,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;AACzB,YAAM;AAAEC,QAAAA;AAAF,UAAcD,MAApB;AACAF,MAAAA,KAAK,CAACd,IAAN,CAAWC,WAAX,GAAyBgB,OAAzB;AACAH,MAAAA,KAAK,CAACd,IAAN,CAAWE,IAAX,GAAmBY,KAAK,CAACd,IAAN,CAAWC,WAAX,GAAyBa,KAAK,CAACd,IAAN,CAAWG,IAArC,GAA6CW,KAAK,CAACd,IAAN,CAAWG,IAA1E;AACH,KAXK;AAaNe,IAAAA,QAAQ,EAAEJ,KAAK,IAAI;AACfA,MAAAA,KAAK,CAACd,IAAN,CAAWC,WAAX,IAA0B,CAA1B;AACAa,MAAAA,KAAK,CAACd,IAAN,CAAWE,IAAX,GAAmBY,KAAK,CAACd,IAAN,CAAWC,WAAX,GAAyBa,KAAK,CAACd,IAAN,CAAWG,IAArC,GAA6CW,KAAK,CAACd,IAAN,CAAWG,IAA1E;AACH,KAhBK;AAkBNgB,IAAAA,YAAY,EAAEL,KAAK,IAAI;AACnBA,MAAAA,KAAK,CAACd,IAAN,CAAWC,WAAX,IAA0B,CAA1B;AACAa,MAAAA,KAAK,CAACd,IAAN,CAAWE,IAAX,GAAmBY,KAAK,CAACd,IAAN,CAAWC,WAAX,GAAyBa,KAAK,CAACd,IAAN,CAAWG,IAArC,GAA6CW,KAAK,CAACd,IAAN,CAAWG,IAA1E;AACH,KArBK;AAuBNiB,IAAAA,UAAU,EAAE,CAACN,KAAD,EAAQE,MAAR,KAAmB;AAC3B,YAAM;AAAEC,QAAAA;AAAF,UAAcD,MAApB;AACAF,MAAAA,KAAK,CAACf,OAAN,GAAgBkB,OAAhB;AACH,KA1BK;AA4BNI,IAAAA,YAAY,EAAE,CAACP,KAAD,EAAQE,MAAR,KAAmB;AAC7B,YAAM;AAAEC,QAAAA;AAAF,UAAcD,MAApB;AACAF,MAAAA,KAAK,CAACJ,UAAN,GAAmBO,OAAnB;AACH,KA/BK;AAiCNK,IAAAA,SAAS,EAAE,CAACR,KAAD,EAAQE,MAAR,KAAmB;AAC1B,YAAM;AAAEC,QAAAA;AAAF,UAAcD,MAApB;AACAF,MAAAA,KAAK,CAACH,MAAN,GAAeM,OAAf;AACH,KApCK;AAsCNM,IAAAA,WAAW,EAAE,CAACT,KAAD,EAAQE,MAAR,KAAmB;AAC5B,YAAM;AAAEC,QAAAA;AAAF,UAAcD,MAApB;AACAF,MAAAA,KAAK,CAACV,SAAN,GAAkBa,OAAlB;AACH,KAzCK;AA2CNO,IAAAA,WAAW,EAAE,CAACV,KAAD,EAAQE,MAAR,KAAmB;AAC5B,YAAM;AAAEC,QAAAA;AAAF,UAAcD,MAApB;AACAF,MAAAA,KAAK,CAAChB,IAAN,GAAamB,OAAb;AACH,KA9CK;AAgDNQ,IAAAA,YAAY,EAAE,CAACX,KAAD,EAAQE,MAAR,KAAmB;AAC7B,YAAM;AAAEC,QAAAA;AAAF,UAAcD,MAApB;AACAF,MAAAA,KAAK,CAACjB,UAAN,GAAmBoB,OAAnB;AACH,KAnDK;AAqDNS,IAAAA,KAAK,EAAEZ,KAAK,IAAI;AACZA,MAAAA,KAAK,CAAChB,IAAN,GAAa,EAAb;AACAgB,MAAAA,KAAK,CAACjB,UAAN,GAAmB,EAAnB;AACAiB,MAAAA,KAAK,CAACH,MAAN,GAAe,CAAC,EAAD,EAAK,CAAL,CAAf;AACH;AAzDK;AAzBsB,CAAD,CAA5B;AAsFP,OAAO,MAAM;AACTa,EAAAA,WADS;AACIE,EAAAA,KADJ;AACWL,EAAAA,YADX;AAETC,EAAAA,SAFS;AAEEG,EAAAA,YAFF;AAEgBF,EAAAA,WAFhB;AAGTH,EAAAA,UAHS;AAGGF,EAAAA,QAHH;AAGaC,EAAAA,YAHb;AAITN,EAAAA,SAJS;AAIEE,EAAAA;AAJF,IAKTrB,QAAQ,CAACiC,OALN;AAOP,eAAejC,QAAQ,CAACkC,OAAxB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const dataUser = createSlice({\n\n    name: 'blogs',\n    initialState: {\n        token_keys: {} as object,\n        user: {} as object,\n        display: true as boolean,\n\n        page: {\n            currentPage: 1 as number,\n            skip: 0 as number,\n            take: 4 as number\n        } as any,\n\n        edit_post: {\n            infouser: { username: '' },\n            updatedAt: '',\n            title: '',\n            content: ''\n        } as object,\n\n        index_post: [] as object[],\n        myPost: [[], 0] as any[]\n    },\n\n    reducers: {\n\n        firstPage: state => {\n            state.page.currentPage = 1\n            state.page.skip = (state.page.currentPage * state.page.take) - state.page.take\n        },\n\n        lastPage: (state, action) => {\n            const { payload } = action\n            state.page.currentPage = payload\n            state.page.skip = (state.page.currentPage * state.page.take) - state.page.take\n        },\n\n        nextPage: state => {\n            state.page.currentPage += 1\n            state.page.skip = (state.page.currentPage * state.page.take) - state.page.take\n        },\n\n        previousPage: state => {\n            state.page.currentPage -= 1\n            state.page.skip = (state.page.currentPage * state.page.take) - state.page.take\n        },\n\n        setDisplay: (state, action) => {\n            const { payload } = action\n            state.display = payload\n        },\n\n        setIndexPost: (state, action) => {\n            const { payload } = action\n            state.index_post = payload\n        },\n\n        setMyPost: (state, action) => {\n            const { payload } = action\n            state.myPost = payload\n        },\n\n        setEditPost: (state, action) => {\n            const { payload } = action\n            state.edit_post = payload\n        },\n\n        setDataUser: (state, action) => {\n            const { payload } = action\n            state.user = payload\n        },\n\n        setTokenKeys: (state, action) => {\n            const { payload } = action\n            state.token_keys = payload\n        },\n\n        reset: state => {\n            state.user = {}\n            state.token_keys = {}\n            state.myPost = [[], 0]\n        }\n    }\n})\n\nexport const {\n    setDataUser, reset, setIndexPost,\n    setMyPost, setTokenKeys, setEditPost,\n    setDisplay, nextPage, previousPage,\n    firstPage, lastPage\n} = dataUser.actions\n\nexport default dataUser.reducer"]},"metadata":{},"sourceType":"module"}