{"ast":null,"code":"var _jsxFileName = \"/home/linux/Documents/IMIN/AUGUST-16/client/src/components/Comment.tsx\";\nimport { Component } from \"react\";\nimport { Button, Form, Card } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Api from '../api/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Comment extends Component {\n  constructor(props) {\n    super(props);\n    this.count = 0;\n\n    this.commentValue = e => {\n      const {\n        value\n      } = e.target;\n      this.setState({\n        comments: value\n      });\n    };\n\n    this.submit = async () => {\n      const {\n        comments\n      } = this.state;\n\n      if (this.props.data.login === false) {\n        alert('You need to login!');\n      } else if (comments === '') {\n        alert(`Don't submit empty data!`);\n      } else {\n        // console.log(this.state)\n        const {\n          uuid\n        } = this.props.info;\n        const data = {\n          username: this.props.data.user.username,\n          user_uuid: this.props.data.user.uuid,\n          post_uuid: uuid,\n          comments\n        };\n\n        try {\n          const api = new Api(data);\n          const result = await api.addComment();\n\n          if (result) {\n            this.props.history.push('/');\n          }\n        } catch (error) {\n          const {\n            data\n          } = error.response;\n          alert(data.message);\n        }\n      }\n    };\n\n    this.displayComments = e => {\n      this.count++;\n      const {\n        parentNode\n      } = e.target;\n      const {\n        childNodes\n      } = parentNode;\n\n      if (this.count === 1 && childNodes[8].childNodes.length !== 0) {\n        childNodes[8].style.display = 'block';\n      } else if (this.count === 2 && childNodes[8].childNodes.length !== 0) {\n        childNodes[8].style.display = 'none';\n        return this.count = 0;\n      }\n    };\n\n    this.hiddenComments = () => {\n      return this.props.infocomments.length !== 0 ? /*#__PURE__*/_jsxDEV(Card, {\n        className: \"cardComments\",\n        style: {\n          display: 'none'\n        },\n        children: this.props.infocomments.map(res => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [res.username, \" :\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: res.comments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)]\n        }, res.uuid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this) : null;\n    };\n\n    this.render = () => {\n      // console.log(this.props.data.index_post[0])\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n          className: \"displayComments\",\n          \"aria-disabled\": this.props.info.infocomments.length === 0,\n          onClick: this.displayComments,\n          children: [this.props.info.infocomments.length, \" comments\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this), this.hiddenComments(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          placeholder: \"Add comments\",\n          name: \"comments\",\n          onChange: this.commentValue,\n          rows: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          onClick: this.submit,\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.state = {\n      comments: ''\n    };\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nexport default withRouter(connect(mapStateToProps)(Comment));","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-16/client/src/components/Comment.tsx"],"names":["Component","Button","Form","Card","connect","withRouter","Api","Comment","constructor","props","count","commentValue","e","value","target","setState","comments","submit","state","data","login","alert","uuid","info","username","user","user_uuid","post_uuid","api","result","addComment","history","push","error","response","message","displayComments","parentNode","childNodes","length","style","display","hiddenComments","infocomments","map","res","render","mapStateToProps"],"mappings":"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","sourcesContent":["import { Component } from \"react\"\nimport { Button, Form, Card } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport Api from '../api/Api'\n\n\ninterface Props {\n    data: {\n        login: boolean\n        user: {\n            uuid: string\n            username: string\n        }\n        index_post: {\n            0: any\n        }\n    }\n    info: any\n    infocomments: any\n    history?: any\n}\n\ninterface State {\n    comments: string\n}\n\n\nclass Comment extends Component<Props | any, State> {\n\n\n    count: number = 0\n\n    constructor(props: any) {\n        super(props)\n        this.state = {\n            comments: ''\n        }\n    }\n\n    commentValue = (e: any) => {\n        const { value } = e.target\n        this.setState({ comments: value })\n    }\n\n    submit = async (): Promise<void> => {\n\n        const { comments } = this.state\n\n        if (this.props.data.login === false) {\n            alert('You need to login!')\n        } else if (comments === '') {\n            alert(`Don't submit empty data!`)\n        } else {\n            // console.log(this.state)\n            const { uuid } = this.props.info\n            const data = {\n                username: this.props.data.user.username,\n                user_uuid: this.props.data.user.uuid,\n                post_uuid: uuid,\n                comments\n            }\n\n            try {\n                const api = new Api(data)\n                const result: any = await api.addComment()\n                if (result) {\n                    this.props.history.push('/')\n                }\n            } catch (error) {\n                const { data } = error.response\n                alert(data.message)\n            }\n\n        }\n    }\n\n    displayComments = (e: any) => {\n        this.count++\n        const { parentNode } = e.target\n        const { childNodes } = parentNode\n        if (this.count === 1 && childNodes[8].childNodes.length !== 0) {\n            childNodes[8].style.display = 'block'\n        } else if (this.count === 2 && childNodes[8].childNodes.length !== 0) {\n            childNodes[8].style.display = 'none'\n            return this.count = 0\n        }\n    }\n\n    hiddenComments = () => {\n        return this.props.infocomments.length !== 0 ?\n            <Card className=\"cardComments\" style={{ display: 'none' }}>\n                {\n                    this.props.infocomments.map((res: any) =>\n                        <div key={res.uuid}>\n                            <p>{res.username} :</p>\n                            <p>{res.comments}</p>\n                            <hr />\n                        </ div>\n                    )\n                }\n            </ Card> :\n            null\n    }\n\n    render = () => {\n\n        // console.log(this.props.data.index_post[0])\n\n        return (\n            <>\n                <Card.Text className=\"displayComments\" aria-disabled={this.props.info.infocomments.length === 0} onClick={this.displayComments}>{this.props.info.infocomments.length} comments</Card.Text>\n                <hr />\n                {this.hiddenComments()}\n                <br />\n                <Form.Control as=\"textarea\" placeholder=\"Add comments\" name=\"comments\" onChange={this.commentValue} rows={2} />\n                <br />\n                <Button variant=\"dark\" onClick={this.submit}>Comment</Button>\n            </>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: any) => ({\n    data: state.data\n})\n\n\nexport default withRouter(connect(mapStateToProps)(Comment))"]},"metadata":{},"sourceType":"module"}