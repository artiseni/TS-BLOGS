{"ast":null,"code":"var _jsxFileName = \"/home/linux/Documents/IMIN/AUGUST-04/client/src/components/Myposts.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setEditPost } from '../store/data';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport Editpost from './Editpost';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Myposts = () => {\n  _s();\n\n  const {\n    myPost,\n    user\n  } = useSelector(state => state.data);\n  const [getDisplay, setDisplay] = useState(0);\n  const key = Object.keys(user);\n  const history = useHistory();\n  const dispath = useDispatch();\n\n  if (key.length === 0) {\n    history.push('/');\n  }\n\n  const btnEdit = result => {\n    console.log(result);\n    dispath(setEditPost(result));\n    setDisplay(1);\n  };\n\n  switch (myPost[1]) {\n    case 0:\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: true,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"App blogs\",\n                children: [/*#__PURE__*/_jsxDEV(Card, {\n                  children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                      children: \"No posts yet\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 38,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 41,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                      children: \"Let's add your first post!\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 42,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"dark\",\n                      children: \"Add\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 45,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 37,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this);\n\n    default:\n      if (getDisplay === 0) {\n        return myPost[0].map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App blogs\",\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"By : \", result.infouser.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Last update : \", result.updatedAt]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                children: result.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: result.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"dark\",\n                onClick: () => btnEdit(result),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)]\n        }, result.uuid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this));\n      } else {\n        return /*#__PURE__*/_jsxDEV(Editpost, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 24\n        }, this);\n      }\n\n  }\n};\n\n_s(Myposts, \"i5DF3LftJMka9K3lYz8pUWiOZB8=\", false, function () {\n  return [useSelector, useHistory, useDispatch];\n});\n\n_c = Myposts;\nexport default Myposts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Myposts\");","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-04/client/src/components/Myposts.tsx"],"names":["useState","useSelector","useDispatch","setEditPost","Container","Row","Col","Card","Button","useHistory","Editpost","Myposts","myPost","user","state","data","getDisplay","setDisplay","key","Object","keys","history","dispath","length","push","btnEdit","result","console","log","map","infouser","username","updatedAt","title","content","uuid"],"mappings":"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","sourcesContent":["import { FC, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setEditPost } from '../store/data'\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport Editpost from './Editpost'\n\n\nconst Myposts: FC = () => {\n\n    const { myPost, user } = useSelector((state: any) => state.data)\n    const [getDisplay, setDisplay] = useState<number>(0)\n    const key = Object.keys(user)\n    const history = useHistory()\n    const dispath = useDispatch()\n\n    if (key.length === 0) {\n        history.push('/')\n    }\n\n    const btnEdit = (result: any) => {\n        console.log(result)\n        dispath(setEditPost(result))\n        setDisplay(1)\n    }\n\n\n    switch (myPost[1]) {\n        case 0:\n            return (\n                <div className=\"App\">\n                    <Container>\n                        <Row>\n                            <Col md>\n                                <div className='App blogs'>\n                                    <Card>\n                                        <Card.Body>\n                                            <Card.Title>\n                                                No posts yet\n                                                    </Card.Title>\n                                            <hr />\n                                            <Card.Text>\n                                                Let's add your first post!\n                                                    </Card.Text>\n                                            <Button variant=\"dark\">Add</Button>\n                                        </Card.Body>\n                                    </Card>\n                                    <br />\n                                </div>\n                            </Col>\n                        </Row>\n                    </Container>\n                </ div>\n            )\n\n        default:\n            if (getDisplay === 0) {\n                return (\n                    myPost[0].map((result: any) =>\n                        <div className='App blogs' key={result.uuid} >\n                            <Card>\n                                <Card.Body>\n                                    <Card.Text>\n                                        By : {result.infouser.username}\n                                    </Card.Text>\n                                    <Card.Text>\n                                        Last update : {result.updatedAt}\n                                    </Card.Text>\n                                    <Card.Title>\n                                        {result.title}\n                                    </Card.Title>\n                                    <hr />\n                                    <Card.Text>\n                                        {result.content}\n                                    </Card.Text>\n                                    <Button variant=\"dark\" onClick={() => btnEdit(result)}>Edit</Button>\n                                </Card.Body>\n                            </Card>\n                            <br />\n                        </div>\n                    )\n                )\n            } else {\n                return <Editpost />\n            }\n    }\n}\n\n\nexport default Myposts"]},"metadata":{},"sourceType":"module"}