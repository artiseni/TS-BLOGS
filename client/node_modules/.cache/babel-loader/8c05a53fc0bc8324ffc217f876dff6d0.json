{"ast":null,"code":"var _jsxFileName = \"/home/linux/Documents/IMIN/AUGUST-04/client/src/pages/Signup.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Card, Form, Button } from 'react-bootstrap';\nimport Navigation from '../components/Navigation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const [getValue, setValue] = useState({});\n\n  const getText = e => {\n    const {\n      name\n    } = e.target;\n    const {\n      value\n    } = e.target;\n    setValue({ ...getValue,\n      [name]: value\n    });\n  };\n\n  const submit = () => {\n    validate();\n    console.log(getValue);\n  };\n\n  const validate = () => {\n    const {\n      username,\n      email,\n      password,\n      password_retype\n    } = getValue;\n\n    if (getValue === null || username === '' || email === '' || password === '' || password_retype === '') {\n      alert(`Data can't be empty!`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      logout: {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formUsername\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"username\",\n              onChange: e => getText(e),\n              placeholder: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              name: \"email\",\n              onChange: e => getText(e),\n              placeholder: \"example@email.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"We'll never share your email!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              name: \"password\",\n              onChange: e => getText(e),\n              placeholder: \"Your password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formPassword_retype\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              name: \"password_retype\",\n              onChange: e => getText(e),\n              placeholder: \"Retype password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"dark\",\n            onClick: submit,\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Signup, \"ZPdxFsatnWdzJAhyUY26myT7wWY=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-04/client/src/pages/Signup.tsx"],"names":["useState","Card","Form","Button","Navigation","Signup","getValue","setValue","getText","e","name","target","value","submit","validate","console","log","username","email","password","password_retype","alert"],"mappings":";;;AAAA,SAAaA,QAAb,QAA6B,OAA7B;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,iBAAnC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;;AAGA,MAAMC,MAAU,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,QAAD,EAAWC,QAAX,IAAuBP,QAAQ,CAAC,EAAD,CAArC;;AAEA,QAAMQ,OAAO,GAAIC,CAAD,IAAY;AACxB,UAAM;AAAEC,MAAAA;AAAF,QAAgBD,CAAC,CAACE,MAAxB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAiBH,CAAC,CAACE,MAAzB;AACAJ,IAAAA,QAAQ,CAAC,EAAE,GAAGD,QAAL;AAAe,OAACI,IAAD,GAAQE;AAAvB,KAAD,CAAR;AACH,GAJD;;AAMA,QAAMC,MAAM,GAAG,MAAM;AACjBC,IAAAA,QAAQ;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACH,GAHD;;AAKA,QAAMQ,QAAQ,GAAG,MAAM;AAEnB,UAAM;AAAEG,MAAAA,QAAF;AAAYC,MAAAA,KAAZ;AAAmBC,MAAAA,QAAnB;AAA6BC,MAAAA;AAA7B,QAAsDd,QAA5D;;AAEA,QAAIA,QAAQ,KAAK,IAAb,IAAqBW,QAAQ,KAAK,EAAlC,IAAwCC,KAAK,KAAK,EAAlD,IAAwDC,QAAQ,KAAK,EAArE,IAA2EC,eAAe,KAAK,EAAnG,EAAuG;AACnGC,MAAAA,KAAK,CAAE,sBAAF,CAAL;AACH;AACJ,GAPD;;AASA,sBACI;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,MAAM,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACI,QAAC,IAAD;AAAA,+BACI,QAAC,IAAD;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,cAAtB;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,IAAI,EAAC,MAAnB;AAA0B,cAAA,IAAI,EAAC,UAA/B;AAA0C,cAAA,QAAQ,EAAEZ,CAAC,IAAID,OAAO,CAACC,CAAD,CAAhE;AAAqE,cAAA,WAAW,EAAC;AAAjF;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,WAAtB;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,IAAI,EAAC,OAAnB;AAA2B,cAAA,IAAI,EAAC,OAAhC;AAAwC,cAAA,QAAQ,EAAEA,CAAC,IAAID,OAAO,CAACC,CAAD,CAA9D;AAAmE,cAAA,WAAW,EAAC;AAA/E;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAYI,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,cAAtB;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,IAAI,EAAC,UAAnB;AAA8B,cAAA,IAAI,EAAC,UAAnC;AAA8C,cAAA,QAAQ,EAAEA,CAAC,IAAID,OAAO,CAACC,CAAD,CAApE;AAAyE,cAAA,WAAW,EAAC;AAArF;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZJ,eAgBI,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,qBAAtB;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,IAAI,EAAC,UAAnB;AAA8B,cAAA,IAAI,EAAC,iBAAnC;AAAqD,cAAA,QAAQ,EAAEA,CAAC,IAAID,OAAO,CAACC,CAAD,CAA3E;AAAgF,cAAA,WAAW,EAAC;AAA5F;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBJ,eAoBI;AAAA;AAAA;AAAA;AAAA,kBApBJ,eAqBI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,MAAhB;AAAuB,YAAA,OAAO,EAAEI,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAgCH,CAxDD;;GAAMR,M;;KAAAA,M;AA0DN,eAAeA,MAAf","sourcesContent":["import { FC, useState } from 'react'\nimport { Card, Form, Button } from 'react-bootstrap'\nimport Navigation from '../components/Navigation'\n\n\nconst Signup: FC = () => {\n\n    const [getValue, setValue] = useState({})\n\n    const getText = (e: any) => {\n        const { name }: any = e.target\n        const { value }: any = e.target\n        setValue({ ...getValue, [name]: value })\n    }\n\n    const submit = () => {\n        validate()\n        console.log(getValue)\n    }\n\n    const validate = () => {\n\n        const { username, email, password, password_retype }: any = getValue\n\n        if (getValue === null || username === '' || email === '' || password === '' || password_retype === '') {\n            alert(`Data can't be empty!`)\n        }\n    }\n\n    return (\n        <>\n            <Navigation logout={{}} />\n            <div className=\"App\">\n                <Card>\n                    <Form>\n                        <Form.Group controlId=\"formUsername\">\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control type=\"text\" name=\"username\" onChange={e => getText(e)} placeholder=\"Username\" />\n                        </Form.Group>\n                        <Form.Group controlId=\"formEmail\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" name=\"email\" onChange={e => getText(e)} placeholder=\"example@email.com\" />\n                            <Form.Text className=\"text-muted\">\n                                We'll never share your email!\n                        </Form.Text>\n                        </Form.Group>\n                        <Form.Group controlId=\"formPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" name=\"password\" onChange={e => getText(e)} placeholder=\"Your password\" />\n                        </Form.Group>\n                        <Form.Group controlId=\"formPassword_retype\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" name=\"password_retype\" onChange={e => getText(e)} placeholder=\"Retype password\" />\n                        </Form.Group>\n                        <br />\n                        <Button variant=\"dark\" onClick={submit}>Signup</Button>\n                    </Form>\n                </Card>\n            </div>\n        </>\n    )\n}\n\nexport default Signup"]},"metadata":{},"sourceType":"module"}