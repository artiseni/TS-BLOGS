{"ast":null,"code":"import axios from 'axios';\nexport default class Api {\n  constructor(req) {\n    this.api = void 0;\n    this.req = void 0;\n\n    this.login = async () => {\n      const res = await this.api.post('/login', this.req);\n\n      if (res) {\n        const {\n          data\n        } = res;\n        return data;\n      } else {\n        return res;\n      }\n    };\n\n    this.tokenValidation = async token => {\n      const user = await this.api.get('/user', {\n        headers: {\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n\n      if (user) {\n        const {\n          data\n        } = user;\n        return data;\n      } else {\n        return user;\n      }\n    };\n\n    this.register = async () => {\n      const res = await this.api.post('/signup', this.req);\n\n      if (res) {\n        const {\n          data\n        } = res;\n        return data;\n      } else {\n        return res;\n      }\n    };\n\n    this.index = async () => {\n      const res = await this.api.get('/index');\n\n      if (res) {\n        const {\n          data\n        } = res;\n        return data;\n      }\n    };\n\n    this.req = req;\n    this.api = axios.create({\n      baseURL: `http://localhost:5000`,\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-04/client/src/api/Api.ts"],"names":["axios","Api","constructor","req","api","login","res","post","data","tokenValidation","token","user","get","headers","register","index","create","baseURL"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,GAAN,CAAU;AAKrBC,EAAAA,WAAW,CAACC,GAAD,EAAW;AAAA,SAHtBC,GAGsB;AAAA,SAFtBD,GAEsB;;AAAA,SAUtBE,KAVsB,GAUd,YAA2B;AAC/B,YAAMC,GAAQ,GAAG,MAAM,KAAKF,GAAL,CAASG,IAAT,CAAc,QAAd,EAAwB,KAAKJ,GAA7B,CAAvB;;AACA,UAAIG,GAAJ,EAAS;AACL,cAAM;AAAEE,UAAAA;AAAF,YAAWF,GAAjB;AACA,eAAOE,IAAP;AACH,OAHD,MAGO;AACH,eAAOF,GAAP;AACH;AACJ,KAlBqB;;AAAA,SAoBtBG,eApBsB,GAoBJ,MAAOC,KAAP,IAAsB;AAEpC,YAAMC,IAAS,GAAG,MAAM,KAAKP,GAAL,CAASQ,GAAT,CAAa,OAAb,EAAsB;AAAEC,QAAAA,OAAO,EAAE;AAAE,2BAAkB,UAASH,KAAM;AAAnC;AAAX,OAAtB,CAAxB;;AACA,UAAIC,IAAJ,EAAU;AACN,cAAM;AAAEH,UAAAA;AAAF,YAAWG,IAAjB;AACA,eAAOH,IAAP;AACH,OAHD,MAGO;AACH,eAAOG,IAAP;AACH;AACJ,KA7BqB;;AAAA,SAgCtBG,QAhCsB,GAgCX,YAA2B;AAClC,YAAMR,GAAQ,GAAG,MAAM,KAAKF,GAAL,CAASG,IAAT,CAAc,SAAd,EAAyB,KAAKJ,GAA9B,CAAvB;;AACA,UAAIG,GAAJ,EAAS;AACL,cAAM;AAAEE,UAAAA;AAAF,YAAWF,GAAjB;AACA,eAAOE,IAAP;AACH,OAHD,MAGO;AACH,eAAOF,GAAP;AACH;AACJ,KAxCqB;;AAAA,SA0CtBS,KA1CsB,GA0Cd,YAA2B;AAC/B,YAAMT,GAAQ,GAAG,MAAM,KAAKF,GAAL,CAASQ,GAAT,CAAa,QAAb,CAAvB;;AACA,UAAIN,GAAJ,EAAS;AACL,cAAM;AAAEE,UAAAA;AAAF,YAAWF,GAAjB;AACA,eAAOE,IAAP;AACH;AACJ,KAhDqB;;AAClB,SAAKL,GAAL,GAAWA,GAAX;AACA,SAAKC,GAAL,GAAWJ,KAAK,CAACgB,MAAN,CAAa;AACpBC,MAAAA,OAAO,EAAG,uBADU;AAEpBJ,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAFW,KAAb,CAAX;AAMH;;AAboB","sourcesContent":["import axios from 'axios'\n\nexport default class Api {\n\n    api: any\n    req: any\n\n    constructor(req: any) {\n        this.req = req\n        this.api = axios.create({\n            baseURL: `http://localhost:5000`,\n            headers: {\n                \"Content-type\": \"application/json\"\n            }\n        })\n    }\n\n    login = async (): Promise<void> => {\n        const res: any = await this.api.post('/login', this.req)\n        if (res) {\n            const { data } = res\n            return data\n        } else {\n            return res\n        }\n    }\n\n    tokenValidation = async (token: any) => {\n\n        const user: any = await this.api.get('/user', { headers: { \"Authorization\": `Bearer ${token}` } })\n        if (user) {\n            const { data } = user\n            return data\n        } else {\n            return user\n        }\n    }\n\n\n    register = async (): Promise<void> => {\n        const res: any = await this.api.post('/signup', this.req)\n        if (res) {\n            const { data } = res\n            return data\n        } else {\n            return res\n        }\n    }\n\n    index = async (): Promise<void> => {\n        const res: any = await this.api.get('/index')\n        if (res) {\n            const { data } = res\n            return data\n        }\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}