{"ast":null,"code":"var _jsxFileName = \"/home/linux/Documents/IMIN/AUGUST-16/client/src/pages/Myblogs.tsx\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col, Card, Alert, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport Navigation from '../components/Navigation';\nimport { setMyPost, setLoading, setEdit, setEditPost, setCountBlogs, setCeil } from '../store/hooks';\nimport HiddenButton from '../components/HiddenButton';\nimport EditBlogs from '../components/EditBlogs';\nimport Paginate from '../components/Pagin';\nimport Api from '../api/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Myblogs extends Component {\n  constructor(...args) {\n    super(...args);\n    this.user = this.props.data.user;\n    this.data = void 0;\n\n    this.componentDidMount = () => {\n      this.updatePage();\n    };\n\n    this.updatePage = async () => {\n      const {\n        blogs\n      } = this.props.data;\n      const {\n        uuid\n      } = this.props.data.user;\n      const {\n        currentPage,\n        take\n      } = blogs;\n      const data = {\n        uuid,\n        currentPage,\n        take\n      };\n\n      try {\n        const api = new Api(data);\n        const result = await api.myBlogs();\n\n        if (result) {\n          this.props.setLoading();\n          this.props.setMyPost(result);\n          this.props.setCountBlogs(result[1]);\n          this.props.setCeil();\n        }\n      } catch (error) {\n        const {\n          data\n        } = error.response;\n        alert(data.message);\n      }\n    };\n\n    this.isEdit = (edit, myPost, hidden) => {\n      return edit === false ? myPost[0].map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App blogs\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"By : \", result.infouser.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Last update : \", result.updatedAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n              children: result.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              className: \"content\",\n              children: hidden.textBody(result.content)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"dark\",\n              onClick: () => this.btnEdit(result),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(HiddenButton, {\n            text: result.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, result.uuid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(EditBlogs, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.btnEdit = result => {\n      const {\n        uuid,\n        title,\n        content,\n        infouser,\n        updatedAt\n      } = result;\n      const {\n        username\n      } = infouser;\n      this.props.setEditPost({\n        uuid,\n        username,\n        updatedAt,\n        title,\n        content\n      });\n      this.props.setEdit();\n    };\n\n    this.render = () => {\n      console.log(this.props.data.myPost);\n      const hidden = new HiddenButton({});\n      const {\n        loading\n      } = this.props.page;\n      const {\n        myPost\n      } = this.props.data;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(Container, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: true,\n                children: loading ? this.isEdit(this.props.page.edit, myPost, hidden) : /*#__PURE__*/_jsxDEV(Alert, {\n                  variant: \"success\",\n                  children: \"Processing data... \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 39\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Paginate, {\n            type: \"myBlogs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    };\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.data,\n  page: state.page\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setMyPost: data => dispatch(setMyPost(data)),\n  setLoading: () => dispatch(setLoading()),\n  setEdit: () => dispatch(setEdit()),\n  setEditPost: data => dispatch(setEditPost(data)),\n  setCountBlogs: data => dispatch(setCountBlogs(data)),\n  setCeil: () => dispatch(setCeil())\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Myblogs));","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-16/client/src/pages/Myblogs.tsx"],"names":["Component","connect","Container","Row","Col","Card","Alert","Button","withRouter","Navigation","setMyPost","setLoading","setEdit","setEditPost","setCountBlogs","setCeil","HiddenButton","EditBlogs","Paginate","Api","Myblogs","user","props","data","componentDidMount","updatePage","blogs","uuid","currentPage","take","api","result","myBlogs","error","response","alert","message","isEdit","edit","myPost","hidden","map","infouser","username","updatedAt","title","textBody","content","btnEdit","render","console","log","loading","page","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Row, Col, Card, Alert, Button } from 'react-bootstrap'\nimport { withRouter } from 'react-router-dom'\nimport Navigation from '../components/Navigation'\nimport {\n    setMyPost, setLoading, setEdit,\n    setEditPost, setCountBlogs, setCeil\n} from '../store/hooks'\nimport HiddenButton from '../components/HiddenButton'\nimport EditBlogs from '../components/EditBlogs'\nimport Paginate from '../components/Pagin'\nimport Api from '../api/Api'\n\n\ninterface Props {\n    data: {\n        user: any\n        myPost: any\n    }\n    page: {\n        loading: boolean\n        edit: boolean\n    }\n\n    setEdit: any\n    setEditPost: any\n    setMypost: any\n    setLoading: any\n    setCountBlogs: any\n    setCeil: any\n}\n\n\nclass Myblogs extends Component<Props | any> {\n\n    user: any = this.props.data.user\n    data: any\n\n    componentDidMount = () => {\n        this.updatePage()\n    }\n\n    updatePage = async (): Promise<void> => {\n        const { blogs } = this.props.data\n        const { uuid } = this.props.data.user\n        const { currentPage, take } = blogs\n        const data = { uuid, currentPage, take }\n\n        try {\n\n            const api = new Api(data)\n            const result: any = await api.myBlogs()\n\n            if (result) {\n                this.props.setLoading()\n                this.props.setMyPost(result)\n                this.props.setCountBlogs(result[1])\n                this.props.setCeil()\n            }\n\n        } catch (error) {\n            const { data } = error.response\n            alert(data.message)\n        }\n    }\n\n    isEdit = (edit: any, myPost: any, hidden: any) => {\n\n        return edit === false ?\n            myPost[0].map((result: any) =>\n                <div className='App blogs' key={result.uuid}>\n                    <Card>\n                        <Card.Body>\n                            <Card.Text>\n                                By : {result.infouser.username}\n                            </Card.Text>\n                            <Card.Text>\n                                Last update : {result.updatedAt}\n                            </Card.Text>\n                            <Card.Title>\n                                {result.title}\n                            </Card.Title>\n                            <hr />\n                            <Card.Text className=\"content\">\n                                {hidden.textBody(result.content)}\n                            </Card.Text>\n                            <Button variant=\"dark\" onClick={() => this.btnEdit(result)} >Edit</Button>\n                        </Card.Body>\n                        <HiddenButton text={result.content} />\n                    </Card>\n                    <br />\n                </div>\n            ) :\n            <div className=\"App\">\n                <EditBlogs />\n            </div>\n\n    }\n\n    btnEdit = (result: any) => {\n        const { uuid, title, content, infouser, updatedAt } = result\n        const { username } = infouser\n\n        this.props.setEditPost({ uuid, username, updatedAt, title, content })\n        this.props.setEdit()\n    }\n\n    render = () => {\n\n        console.log(this.props.data.myPost)\n\n        const hidden = new HiddenButton({})\n        const { loading } = this.props.page\n        const { myPost } = this.props.data\n\n        return (\n            <>\n                <Navigation />\n                <div className=\"App\">\n                    <Container>\n                        <Row>\n                            <Col md>\n                                {loading ?\n                                    this.isEdit(this.props.page.edit, myPost, hidden)\n                                    : <Alert variant=\"success\">Processing data... </Alert>\n                                }\n                            </Col>\n                        </Row>\n                    </Container>\n                    <Paginate type=\"myBlogs\" />\n                </div>\n            </>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state: any) => ({\n    data: state.data,\n    page: state.page\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    setMyPost: (data: any) => dispatch(setMyPost(data)),\n    setLoading: () => dispatch(setLoading()),\n    setEdit: () => dispatch(setEdit()),\n    setEditPost: (data: any) => dispatch(setEditPost(data)),\n    setCountBlogs: (data: any) => dispatch(setCountBlogs(data)),\n    setCeil: () => dispatch(setCeil())\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Myblogs))\n"]},"metadata":{},"sourceType":"module"}