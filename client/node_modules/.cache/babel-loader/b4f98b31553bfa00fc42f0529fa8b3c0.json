{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const dataUser = createSlice({\n  name: 'blogs',\n  initialState: {\n    token_keys: {},\n    user: {},\n    display: true,\n    content: [],\n    button_number: 0,\n    str: '',\n    countBlogs: 0,\n    ceil: 0,\n    current: 1,\n    loading: false,\n    login: false,\n    edit: false,\n    displayComments: false,\n    blogs: {\n      currentPage: 1,\n      take: 4\n    },\n    edit_post: {\n      uuid: '',\n      username: '',\n      updatedAt: '',\n      title: '',\n      content: ''\n    },\n    index_post: [[], 0],\n    myPost: [[], 0]\n  },\n  reducers: {\n    setDisplayComments: state => {\n      state.displayComments = !state.displayComments;\n    },\n    setEdit: state => {\n      state.edit = !state.edit;\n    },\n    setLogin: state => {\n      state.login = true;\n    },\n    setBlogs: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.blogs = payload;\n    },\n    setCeil: state => {\n      state.ceil = Math.ceil(state.countBlogs / state.blogs.take);\n    },\n    setCountBlogs: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.countBlogs = payload;\n    },\n    setLoading: state => {\n      state.loading = true;\n    },\n    setString: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.str = payload;\n    },\n    nextButtonNumber: state => {\n      state.button_number += 1;\n    },\n    changeButtonNumber: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.button_number = payload;\n    },\n    setContent: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.content = payload;\n    },\n    firstPage: state => {\n      state.current = 1;\n      state.blogs = {\n        currentPage: 1,\n        take: 4\n      };\n    },\n    targetPage: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.current = payload;\n      state.blogs = {\n        currentPage: payload,\n        take: 4\n      };\n    },\n    nextPage: state => {\n      state.current = state.current + 1;\n      state.blogs = {\n        currentPage: state.blogs.currentPage + 1,\n        take: 4\n      };\n    },\n    previousPage: state => {\n      state.current = state.current - 1;\n      state.blogs = {\n        currentPage: state.blogs.currentPage - 1,\n        take: 4\n      };\n    },\n    setDisplay: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.display = payload;\n    },\n    setIndexPost: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.index_post = payload;\n    },\n    setMyPost: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.myPost = payload;\n    },\n    setEditPost: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.edit_post = payload;\n    },\n    setDataUser: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.user = payload;\n    },\n    setTokenKeys: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.token_keys = payload;\n    },\n    reset: state => {\n      state.edit = false;\n      state.login = false;\n      state.button_number = 0;\n      state.user = {};\n      state.token_keys = {};\n      state.myPost = [[], 0];\n    }\n  }\n});\nexport const {\n  setDataUser,\n  reset,\n  setIndexPost,\n  setMyPost,\n  setTokenKeys,\n  setEditPost,\n  setDisplay,\n  nextPage,\n  previousPage,\n  firstPage,\n  targetPage,\n  setContent,\n  nextButtonNumber,\n  changeButtonNumber,\n  setString,\n  setLoading,\n  setCountBlogs,\n  setCeil,\n  setBlogs,\n  setLogin,\n  setEdit,\n  setDisplayComments\n} = dataUser.actions;\nexport default dataUser.reducer;","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-16/client/src/store/hooks.ts"],"names":["createSlice","dataUser","name","initialState","token_keys","user","display","content","button_number","str","countBlogs","ceil","current","loading","login","edit","displayComments","blogs","currentPage","take","edit_post","uuid","username","updatedAt","title","index_post","myPost","reducers","setDisplayComments","state","setEdit","setLogin","setBlogs","action","payload","setCeil","Math","setCountBlogs","setLoading","setString","nextButtonNumber","changeButtonNumber","setContent","firstPage","targetPage","nextPage","previousPage","setDisplay","setIndexPost","setMyPost","setEditPost","setDataUser","setTokenKeys","reset","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\n\nexport const dataUser = createSlice({\n\n    name: 'blogs',\n    initialState: {\n        token_keys: {} as object,\n        user: {} as object,\n        display: true as boolean,\n        content: [],\n        button_number: 0 as number,\n        str: '' as string,\n        countBlogs: 0 as number,\n        ceil: 0,\n        current: 1,\n        loading: false,\n        login: false,\n        edit: false,\n        displayComments: false,\n\n        blogs: {\n            currentPage: 1 as number,\n            take: 4 as number\n        } as any,\n\n        edit_post: {\n            uuid: '' as string,\n            username: '' as string,\n            updatedAt: '' as string,\n            title: '' as string,\n            content: '' as string\n        } as object,\n\n        index_post: [[], 0] as any[],\n        myPost: [[], 0] as any[]\n    },\n\n    reducers: {\n\n        setDisplayComments: state => {\n            state.displayComments = !state.displayComments\n        },\n\n        setEdit: state => {\n            state.edit = !state.edit\n        },\n\n        setLogin: state => {\n            state.login = true\n        },\n\n        setBlogs: (state, action) => {\n            const { payload } = action\n            state.blogs = payload\n        },\n\n        setCeil: state => {\n            state.ceil = Math.ceil(state.countBlogs / state.blogs.take)\n        },\n\n        setCountBlogs: (state, action) => {\n            const { payload } = action\n            state.countBlogs = payload\n        },\n\n        setLoading: state => {\n            state.loading = true\n        },\n\n        setString: (state, action) => {\n            const { payload } = action\n            state.str = payload\n        },\n\n        nextButtonNumber: state => {\n            state.button_number += 1\n        },\n\n        changeButtonNumber: (state, action) => {\n            const { payload } = action\n            state.button_number = payload\n        },\n\n        setContent: (state, action) => {\n            const { payload } = action\n            state.content = payload\n        },\n\n        firstPage: state => {\n            state.current = 1\n            state.blogs = { currentPage: 1, take: 4 }\n        },\n\n        targetPage: (state, action) => {\n            const { payload } = action\n            state.current = payload\n            state.blogs = { currentPage: payload, take: 4 }\n        },\n\n        nextPage: state => {\n            state.current = state.current + 1\n            state.blogs = {\n                currentPage: state.blogs.currentPage + 1,\n                take: 4\n            }\n        },\n\n        previousPage: state => {\n            state.current = state.current - 1\n            state.blogs = {\n                currentPage: state.blogs.currentPage - 1,\n                take: 4\n            }\n        },\n\n        setDisplay: (state, action) => {\n            const { payload } = action\n            state.display = payload\n        },\n\n        setIndexPost: (state, action) => {\n            const { payload } = action\n            state.index_post = payload\n        },\n\n        setMyPost: (state, action) => {\n            const { payload } = action\n            state.myPost = payload\n        },\n\n        setEditPost: (state, action) => {\n            const { payload } = action\n            state.edit_post = payload\n        },\n\n        setDataUser: (state, action) => {\n            const { payload } = action\n            state.user = payload\n        },\n\n        setTokenKeys: (state, action) => {\n            const { payload } = action\n            state.token_keys = payload\n        },\n\n        reset: state => {\n            state.edit = false\n            state.login = false\n            state.button_number = 0\n            state.user = {}\n            state.token_keys = {}\n            state.myPost = [[], 0]\n        }\n    }\n})\n\nexport const {\n    setDataUser, reset, setIndexPost,\n    setMyPost, setTokenKeys, setEditPost,\n    setDisplay, nextPage, previousPage,\n    firstPage, targetPage, setContent,\n    nextButtonNumber, changeButtonNumber,\n    setString, setLoading, setCountBlogs,\n    setCeil, setBlogs, setLogin, setEdit,\n    setDisplayComments\n} = dataUser.actions\n\nexport default dataUser.reducer"]},"metadata":{},"sourceType":"module"}