{"ast":null,"code":"import axios from 'axios';\nexport default class Api {\n  constructor(req) {\n    this.api = void 0;\n    this.req = void 0;\n    this.token = void 0;\n\n    this.login = async () => {\n      const res = await this.api.post('/login', this.req);\n\n      if (res) {\n        const {\n          data\n        } = res;\n        return data;\n      } else {\n        return res;\n      }\n    };\n\n    this.tokenValidation = async token => {\n      this.token = token;\n      const user = await this.api.get('/user');\n\n      if (user) {\n        const {\n          data\n        } = user;\n        return data;\n      } else {\n        return user;\n      }\n    };\n\n    this.register = async () => {\n      const res = await this.api.post('/signup', this.req);\n\n      if (res) {\n        const {\n          data\n        } = res;\n        return data;\n      } else {\n        return res;\n      }\n    };\n\n    this.index = async () => {\n      const res = await this.api.get('/index');\n\n      if (res) {\n        const {\n          data\n        } = res;\n        return data;\n      }\n    };\n\n    this.req = req;\n    this.api = axios.create({\n      baseURL: `http://localhost:5000`,\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"Authorization\": `Bearer ${this.token}`\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-04/client/src/api/Api.ts"],"names":["axios","Api","constructor","req","api","token","login","res","post","data","tokenValidation","user","get","register","index","create","baseURL","headers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,GAAN,CAAU;AAMrBC,EAAAA,WAAW,CAACC,GAAD,EAAW;AAAA,SAJtBC,GAIsB;AAAA,SAHtBD,GAGsB;AAAA,SAFtBE,KAEsB;;AAAA,SAWtBC,KAXsB,GAWd,YAA2B;AAC/B,YAAMC,GAAQ,GAAG,MAAM,KAAKH,GAAL,CAASI,IAAT,CAAc,QAAd,EAAwB,KAAKL,GAA7B,CAAvB;;AACA,UAAII,GAAJ,EAAS;AACL,cAAM;AAAEE,UAAAA;AAAF,YAAWF,GAAjB;AACA,eAAOE,IAAP;AACH,OAHD,MAGO;AACH,eAAOF,GAAP;AACH;AACJ,KAnBqB;;AAAA,SAqBtBG,eArBsB,GAqBJ,MAAOL,KAAP,IAAsB;AACpC,WAAKA,KAAL,GAAaA,KAAb;AACA,YAAMM,IAAS,GAAG,MAAM,KAAKP,GAAL,CAASQ,GAAT,CAAa,OAAb,CAAxB;;AACA,UAAID,IAAJ,EAAU;AACN,cAAM;AAAEF,UAAAA;AAAF,YAAWE,IAAjB;AACA,eAAOF,IAAP;AACH,OAHD,MAGO;AACH,eAAOE,IAAP;AACH;AACJ,KA9BqB;;AAAA,SAiCtBE,QAjCsB,GAiCX,YAA2B;AAClC,YAAMN,GAAQ,GAAG,MAAM,KAAKH,GAAL,CAASI,IAAT,CAAc,SAAd,EAAyB,KAAKL,GAA9B,CAAvB;;AACA,UAAII,GAAJ,EAAS;AACL,cAAM;AAAEE,UAAAA;AAAF,YAAWF,GAAjB;AACA,eAAOE,IAAP;AACH,OAHD,MAGO;AACH,eAAOF,GAAP;AACH;AACJ,KAzCqB;;AAAA,SA2CtBO,KA3CsB,GA2Cd,YAA2B;AAC/B,YAAMP,GAAQ,GAAG,MAAM,KAAKH,GAAL,CAASQ,GAAT,CAAa,QAAb,CAAvB;;AACA,UAAIL,GAAJ,EAAS;AACL,cAAM;AAAEE,UAAAA;AAAF,YAAWF,GAAjB;AACA,eAAOE,IAAP;AACH;AACJ,KAjDqB;;AAClB,SAAKN,GAAL,GAAWA,GAAX;AACA,SAAKC,GAAL,GAAWJ,KAAK,CAACe,MAAN,CAAa;AACpBC,MAAAA,OAAO,EAAG,uBADU;AAEpBC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAkB,UAAS,KAAKZ,KAAM;AAFjC;AAFW,KAAb,CAAX;AAOH;;AAfoB","sourcesContent":["import axios from 'axios'\n\nexport default class Api {\n\n    api: any\n    req: any\n    token: any\n\n    constructor(req: any) {\n        this.req = req\n        this.api = axios.create({\n            baseURL: `http://localhost:5000`,\n            headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": `Bearer ${this.token}`\n            }\n        })\n    }\n\n    login = async (): Promise<void> => {\n        const res: any = await this.api.post('/login', this.req)\n        if (res) {\n            const { data } = res\n            return data\n        } else {\n            return res\n        }\n    }\n\n    tokenValidation = async (token: any) => {\n        this.token = token\n        const user: any = await this.api.get('/user')\n        if (user) {\n            const { data } = user\n            return data\n        } else {\n            return user\n        }\n    }\n\n\n    register = async (): Promise<void> => {\n        const res: any = await this.api.post('/signup', this.req)\n        if (res) {\n            const { data } = res\n            return data\n        } else {\n            return res\n        }\n    }\n\n    index = async (): Promise<void> => {\n        const res: any = await this.api.get('/index')\n        if (res) {\n            const { data } = res\n            return data\n        }\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}