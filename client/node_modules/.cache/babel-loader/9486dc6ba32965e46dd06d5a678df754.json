{"ast":null,"code":"var _jsxFileName = \"/home/linux/Documents/IMIN/AUGUST-16/client/src/components/HiddenButton.tsx\";\nimport { Component } from \"react\";\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst slicer = text => {\n  const slicer = text.slice(0, 200);\n  return `${slicer}...`;\n};\n\nexport const textBody = text => {\n  const words = text.match(/(\\w+)/g).length;\n\n  if (words >= 100) {// console.log(words)\n  }\n\n  return words <= 100 ? text : slicer(text);\n};\n\nclass HiddenButton extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.readMore = () => {\n      console.log(10);\n    };\n\n    this.isDisplay = () => {\n      const {\n        text\n      } = this.props;\n      const words = text.match(/(\\w+)/g).length;\n      return words >= 100 ? /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.readMore,\n        children: \"Read more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 85\n      }, this);\n    };\n\n    this.render = () => {\n      return this.isDisplay();\n    };\n  }\n\n}\n\nexport default HiddenButton;","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-16/client/src/components/HiddenButton.tsx"],"names":["Component","Button","slicer","text","slice","textBody","words","match","length","HiddenButton","readMore","console","log","isDisplay","props","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,iBAAvB;;;AAGA,MAAMC,MAAM,GAAIC,IAAD,IAAkB;AAC7B,QAAMD,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAW,CAAX,EAAc,GAAd,CAAf;AACA,SAAQ,GAAEF,MAAO,KAAjB;AACH,CAHD;;AAKA,OAAO,MAAMG,QAAQ,GAAIF,IAAD,IAAe;AAEnC,QAAMG,KAAK,GAAGH,IAAI,CAACI,KAAL,CAAW,QAAX,EAAqBC,MAAnC;;AACA,MAAIF,KAAK,IAAI,GAAb,EAAkB,CACd;AACH;;AACD,SAAOA,KAAK,IAAI,GAAT,GAAeH,IAAf,GAAsBD,MAAM,CAACC,IAAD,CAAnC;AACH,CAPM;;AAcP,MAAMM,YAAN,SAA2BT,SAA3B,CAA4C;AAAA;AAAA;;AAAA,SAGxCU,QAHwC,GAG7B,MAAM;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AACH,KALuC;;AAAA,SAOxCC,SAPwC,GAO5B,MAAM;AACd,YAAM;AAAEV,QAAAA;AAAF,UAAgB,KAAKW,KAA3B;AACA,YAAMR,KAAK,GAAGH,IAAI,CAACI,KAAL,CAAW,QAAX,EAAqBC,MAAnC;AACA,aAAOF,KAAK,IAAI,GAAT,gBAAe,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKI,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAf,gBAAqE;AAAA;AAAA;AAAA;AAAA,cAA5E;AACH,KAXuC;;AAAA,SAaxCK,MAbwC,GAa/B,MAAM;AACX,aAAO,KAAKF,SAAL,EAAP;AACH,KAfuC;AAAA;;AAAA;;AAkB5C,eAAeJ,YAAf","sourcesContent":["import { Component } from \"react\"\nimport { Button } from 'react-bootstrap'\n\n\nconst slicer = (text: string) => {\n    const slicer = text.slice(0, 200)\n    return `${slicer}...`\n}\n\nexport const textBody = (text: any) => {\n\n    const words = text.match(/(\\w+)/g).length\n    if (words >= 100) {\n        // console.log(words)\n    }\n    return words <= 100 ? text : slicer(text)\n}\n\n\ninterface Props {\n    text: string\n}\n\nclass HiddenButton extends Component<Props> {\n\n\n    readMore = () => {\n        console.log(10)\n    }\n\n    isDisplay = () => {\n        const { text }: any = this.props\n        const words = text.match(/(\\w+)/g).length\n        return words >= 100 ? <Button onClick={this.readMore} >Read more</Button> : <p></p>\n    }\n\n    render = () => {\n        return this.isDisplay()\n    }\n}\n\nexport default HiddenButton"]},"metadata":{},"sourceType":"module"}