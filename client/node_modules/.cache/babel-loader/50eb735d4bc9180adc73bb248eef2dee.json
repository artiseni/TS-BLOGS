{"ast":null,"code":"var _jsxFileName = \"/home/linux/Documents/IMIN/AUGUST-16/client/src/pages/Index.tsx\";\nimport { Component } from 'react';\nimport Navigation from '../components/Navigation';\nimport { Container, Row, Col, Card, Alert } from 'react-bootstrap';\nimport HiddenButton from '../components/HiddenButton';\nimport Api from '../api/Api';\nimport Pagination from '../components/Pagin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n    this.hidden = new HiddenButton({});\n    this.data = void 0;\n\n    this.componentDidMount = () => {\n      console.log(this.state.params); // console.log(`Mounted`)\n\n      this.updatePage();\n    };\n\n    this.shouldComponentUpdate = () => {\n      console.log(`Should be updated? --> ${this.data}`);\n      return true;\n    };\n\n    this.componentDidUpdate = () => {\n      console.log(`Updated`);\n    };\n\n    this.componentWillUnmount = () => {\n      console.log(`Will unmount`);\n    };\n\n    this.updatePage = async () => {\n      const api = new Api(this.state.params);\n      const data = await api.index();\n      this.setState({\n        data,\n        loading: true\n      });\n      const count = Math.ceil(this.state.data[1] / this.state.params.take);\n      this.setState({\n        countData: count\n      });\n    };\n\n    this.render = () => {\n      // console.log(`Render`)\n      // console.log(this.state.data[0])\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(Container, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: true,\n                children: this.state.loading ? this.state.data[0].map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"App blogs\",\n                  children: [/*#__PURE__*/_jsxDEV(Card, {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n                      children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                        children: [\"By : \", result.infouser.username]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 94,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                        children: [\"Last update : \", result.updatedAt]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 97,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                        children: result.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 100,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 103,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                        className: \"content\",\n                        children: this.hidden.textBody(result.content)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 104,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(HiddenButton, {\n                      text: result.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 45\n                  }, this)]\n                }, result.uuid, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 41\n                }, this)) : /*#__PURE__*/_jsxDEV(Alert, {\n                  variant: \"success\",\n                  children: \"Data sedang diproses... \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            count: this.state.countData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    };\n\n    const str = typeof props;\n\n    const _data = str === 'object' ? 1 : props;\n\n    this.data = _data;\n    this.state = {\n      params: {\n        currentPage: _data,\n        take: 4\n      },\n      loading: false,\n      countData: 0,\n      data: [{}, 0]\n    };\n    console.log(`Constructor --> data : ${_data}`);\n    console.log(this.state.params);\n  } // life cycle\n\n\n}\n\nIndex.getDerivedStateFromProps = (props, state) => {\n  // console.log(`getDerived`)\n  return null;\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-16/client/src/pages/Index.tsx"],"names":["Component","Navigation","Container","Row","Col","Card","Alert","HiddenButton","Api","Pagination","Index","constructor","props","hidden","data","componentDidMount","console","log","state","params","updatePage","shouldComponentUpdate","componentDidUpdate","componentWillUnmount","api","index","setState","loading","count","Math","ceil","take","countData","render","map","result","infouser","username","updatedAt","title","textBody","content","uuid","str","currentPage","getDerivedStateFromProps"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport Navigation from '../components/Navigation'\nimport { Container, Row, Col, Card, Alert } from 'react-bootstrap'\nimport HiddenButton from '../components/HiddenButton'\nimport Api from '../api/Api'\nimport Pagination from '../components/Pagin'\n\ninterface State {\n    params: {\n        currentPage: any\n        take: number\n    }\n    data: any\n    loading: boolean\n    countData: number\n}\n\nclass Index extends Component<any, State> {\n\n    hidden: HiddenButton = new HiddenButton({})\n    data: any\n\n    constructor(props: any) {\n        super(props)\n        const str = typeof props\n        const data = str === 'object' ? 1 : props\n        this.data = data\n        this.state = {\n            params: {\n                currentPage: data,\n                take: 4\n            },\n            loading: false,\n            countData: 0,\n            data: [{}, 0]\n        }\n        console.log(`Constructor --> data : ${data}`)\n        console.log(this.state.params)\n    }\n\n\n    // life cycle\n\n    static getDerivedStateFromProps = (props: any, state: State) => {\n        // console.log(`getDerived`)\n        return null\n    }\n\n    componentDidMount = () => {\n        console.log(this.state.params)\n        // console.log(`Mounted`)\n        this.updatePage()\n\n    }\n\n    shouldComponentUpdate = (): boolean => {\n        console.log(`Should be updated? --> ${this.data}`)\n        return true\n    }\n\n    componentDidUpdate = (): void => {\n        console.log(`Updated`)\n    }\n\n    componentWillUnmount = () => {\n        console.log(`Will unmount`)\n    }\n\n    updatePage = async (): Promise<void> => {\n        const api = new Api(this.state.params)\n        const data = await api.index()\n        this.setState({ data, loading: true })\n        const count = Math.ceil(this.state.data[1] / this.state.params.take)\n        this.setState({ countData: count })\n    }\n\n    render = (): JSX.Element => {\n\n        // console.log(`Render`)\n        // console.log(this.state.data[0])\n\n        return (\n            <>\n                <Navigation />\n                <div className=\"App\">\n                    <Container>\n                        <Row>\n                            <Col md>\n                                {this.state.loading ?\n                                    this.state.data[0].map((result: any) =>\n                                        <div className='App blogs' key={result.uuid}>\n                                            <Card>\n                                                <Card.Body>\n                                                    <Card.Text>\n                                                        By : {result.infouser.username}\n                                                    </Card.Text>\n                                                    <Card.Text>\n                                                        Last update : {result.updatedAt}\n                                                    </Card.Text>\n                                                    <Card.Title>\n                                                        {result.title}\n                                                    </Card.Title>\n                                                    <hr />\n                                                    <Card.Text className=\"content\">\n                                                        {this.hidden.textBody(result.content)}\n                                                    </Card.Text>\n                                                </Card.Body>\n                                                <HiddenButton text={result.content} />\n                                            </Card>\n                                            <br />\n                                        </div>\n                                    ) : <Alert variant=\"success\">Data sedang diproses... </Alert>\n                                }\n                            </Col>\n                        </Row>\n                    </Container>\n                    <Pagination count={this.state.countData} />\n                </div>\n            </>\n        )\n    }\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}