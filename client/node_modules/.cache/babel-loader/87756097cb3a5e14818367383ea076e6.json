{"ast":null,"code":"var _jsxFileName = \"/home/linux/Documents/IMIN/AUGUST-16/client/src/pages/Myblogs.tsx\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col, Card, Alert, Button } from 'react-bootstrap';\nimport { withRouter, Link } from 'react-router-dom';\nimport Navigation from '../components/Navigation';\nimport { setMyPost, setLoading, setEdit, setEditPost, setCountBlogs, setCeil } from '../store/hooks';\nimport HiddenButton from '../components/HiddenButton';\nimport EditBlogs from '../components/EditBlogs';\nimport Paginate from '../components/Pagin';\nimport Api from '../api/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Myblogs extends Component {\n  constructor(...args) {\n    super(...args);\n    this.user = this.props.data.user;\n    this.data = void 0;\n\n    this.componentDidMount = () => {\n      this.updatePage();\n    };\n\n    this.updatePage = async () => {\n      const {\n        blogs\n      } = this.props.page;\n      const {\n        uuid\n      } = this.props.data.user;\n      const {\n        currentPage,\n        take\n      } = blogs;\n      const data = {\n        uuid,\n        currentPage,\n        take\n      };\n\n      try {\n        console.log(data);\n        const api = new Api(data);\n        const result = await api.myBlogs();\n\n        if (result) {\n          this.props.setLoading();\n          this.props.setMyPost(result);\n          this.props.setCountBlogs(result[1]);\n          this.props.setCeil();\n        }\n      } catch (error) {\n        const {\n          data\n        } = error.response;\n        alert(data.message);\n      }\n    };\n\n    this.btnDelete = async uuid => {\n      try {\n        const api = new Api({\n          uuid\n        });\n        await api.deletePost();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.isEdit = (edit, myPost, hidden) => {\n      return edit === false ? myPost[0].map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App blogs\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"By : \", result.infouser.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Last update : \", result.updatedAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n              children: result.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              className: \"content\",\n              children: hidden.textBody(result.content)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"dark\",\n              onClick: () => this.btnEdit(result),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"dark\",\n              onClick: () => this.btnDelete(result.uuid),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(HiddenButton, {\n            text: result.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, result.uuid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(EditBlogs, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.btnEdit = result => {\n      const {\n        uuid,\n        title,\n        content,\n        infouser,\n        updatedAt\n      } = result;\n      const {\n        username\n      } = infouser;\n      this.props.setEditPost({\n        uuid,\n        username,\n        updatedAt,\n        title,\n        content\n      });\n      this.props.setEdit();\n    };\n\n    this.render = () => {\n      const hidden = new HiddenButton({});\n      const {\n        loading,\n        edit\n      } = this.props.page;\n      const {\n        myPost,\n        user\n      } = this.props.data;\n      return myPost[0].length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(Container, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: true,\n                children: loading ? this.isEdit(edit, myPost, hidden) : /*#__PURE__*/_jsxDEV(Alert, {\n                  variant: \"success\",\n                  children: \"Processing data... \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 39\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Paginate, {\n            type: \"myblogs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [user.username, \", You have no blogs yet...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Back to \", /*#__PURE__*/_jsxDEV(Link, {\n                  className: \"link\",\n                  to: `/${user.username}`,\n                  children: \"Home\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 41\n                }, this), \", write interesting blogs and come back here...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    };\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.data,\n  page: state.page\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setMyPost: data => dispatch(setMyPost(data)),\n  setLoading: () => dispatch(setLoading()),\n  setEdit: () => dispatch(setEdit()),\n  setEditPost: data => dispatch(setEditPost(data)),\n  setCountBlogs: data => dispatch(setCountBlogs(data)),\n  setCeil: () => dispatch(setCeil())\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Myblogs));","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-16/client/src/pages/Myblogs.tsx"],"names":["Component","connect","Container","Row","Col","Card","Alert","Button","withRouter","Link","Navigation","setMyPost","setLoading","setEdit","setEditPost","setCountBlogs","setCeil","HiddenButton","EditBlogs","Paginate","Api","Myblogs","user","props","data","componentDidMount","updatePage","blogs","page","uuid","currentPage","take","console","log","api","result","myBlogs","error","response","alert","message","btnDelete","deletePost","isEdit","edit","myPost","hidden","map","infouser","username","updatedAt","title","textBody","content","btnEdit","render","loading","length","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Row, Col, Card, Alert, Button } from 'react-bootstrap'\nimport { withRouter, Link } from 'react-router-dom'\nimport Navigation from '../components/Navigation'\nimport {\n    setMyPost, setLoading, setEdit,\n    setEditPost, setCountBlogs, setCeil\n} from '../store/hooks'\nimport HiddenButton from '../components/HiddenButton'\nimport EditBlogs from '../components/EditBlogs'\nimport Paginate from '../components/Pagin'\nimport Api from '../api/Api'\n\n\ninterface Props {\n    data: {\n        user: any\n        myPost: any\n    }\n    page: {\n        loading: boolean\n        edit: boolean\n        blogs: any\n    }\n\n    setEdit: any\n    setEditPost: any\n    setMypost: any\n    setLoading: any\n    setCountBlogs: any\n    setCeil: any\n}\n\n\nclass Myblogs extends Component<Props | any> {\n\n    user: any = this.props.data.user\n    data: any\n\n    componentDidMount = () => {\n        this.updatePage()\n    }\n\n    updatePage = async (): Promise<void> => {\n        const { blogs } = this.props.page\n        const { uuid } = this.props.data.user\n        const { currentPage, take } = blogs\n        const data = { uuid, currentPage, take }\n\n        try {\n            console.log(data)\n            const api = new Api(data)\n            const result: any = await api.myBlogs()\n\n            if (result) {\n                this.props.setLoading()\n                this.props.setMyPost(result)\n                this.props.setCountBlogs(result[1])\n                this.props.setCeil()\n            }\n\n        } catch (error) {\n            const { data } = error.response\n            alert(data.message)\n        }\n    }\n\n\n    btnDelete = async (uuid: string) => {\n        try {\n            const api = new Api({ uuid })\n            await api.deletePost()\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    isEdit = (edit: any, myPost: any, hidden: any) => {\n\n        return edit === false ?\n            myPost[0].map((result: any) =>\n                <div className='App blogs' key={result.uuid}>\n                    <Card>\n                        <Card.Body>\n                            <Card.Text>\n                                By : {result.infouser.username}\n                            </Card.Text>\n                            <Card.Text>\n                                Last update : {result.updatedAt}\n                            </Card.Text>\n                            <Card.Title>\n                                {result.title}\n                            </Card.Title>\n                            <hr />\n                            <Card.Text className=\"content\">\n                                {hidden.textBody(result.content)}\n                            </Card.Text>\n                            <Button variant=\"dark\" onClick={() => this.btnEdit(result)} >Edit</Button>{' '}\n                            <Button variant=\"dark\" onClick={() => this.btnDelete(result.uuid)} >Delete</Button>\n                        </Card.Body>\n                        <HiddenButton text={result.content} />\n                    </Card>\n                    <br />\n                </div>\n            ) :\n            <div className=\"App\">\n                <EditBlogs />\n            </div>\n\n    }\n\n    btnEdit = (result: any) => {\n        const { uuid, title, content, infouser, updatedAt } = result\n        const { username } = infouser\n\n        this.props.setEditPost({ uuid, username, updatedAt, title, content })\n        this.props.setEdit()\n    }\n\n    render = () => {\n\n\n        const hidden = new HiddenButton({})\n        const { loading, edit } = this.props.page\n        const { myPost, user } = this.props.data\n\n        return myPost[0].length !== 0 ? (\n            <>\n                <Navigation />\n                <div className=\"App\">\n                    <Container>\n                        <Row>\n                            <Col md>\n                                {loading ?\n                                    this.isEdit(edit, myPost, hidden)\n                                    : <Alert variant=\"success\">Processing data... </Alert>\n                                }\n                            </Col>\n                        </Row>\n                    </Container>\n                    <Paginate type=\"myblogs\" />\n                </div>\n            </>\n        ) :\n            <>\n                <Navigation />\n                <div className=\"App\">\n                    <Container>\n                        <Card.Body>\n                            <br />\n                            <Card.Title>\n                                {user.username}, You have no blogs yet...\n                            </Card.Title>\n                            <p>\n                                Back to <Link className=\"link\" to={`/${user.username}`} >Home</Link>, write interesting blogs and come back here...\n                            </p>\n                            <hr />\n                        </Card.Body>\n                    </Container>\n                </div>\n            </>\n    }\n\n}\n\nconst mapStateToProps = (state: any) => ({\n    data: state.data,\n    page: state.page\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    setMyPost: (data: any) => dispatch(setMyPost(data)),\n    setLoading: () => dispatch(setLoading()),\n    setEdit: () => dispatch(setEdit()),\n    setEditPost: (data: any) => dispatch(setEditPost(data)),\n    setCountBlogs: (data: any) => dispatch(setCountBlogs(data)),\n    setCeil: () => dispatch(setCeil())\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Myblogs))\n"]},"metadata":{},"sourceType":"module"}