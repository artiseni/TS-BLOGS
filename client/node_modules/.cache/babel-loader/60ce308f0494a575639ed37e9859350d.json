{"ast":null,"code":"// adding\nconst slicer = text => {\n  const slicer = text.slice(0, 200);\n  return `${slicer}...`;\n};\n\nconst textBody = text => {\n  const words = text.match(/(\\w+)/g).length;\n\n  if (words >= 100) {// console.log(words)\n  }\n\n  return words <= 100 ? text : slicer(text);\n};\n\nexport { textBody, slicer };","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-16/client/src/Functions/slicerText.ts"],"names":["slicer","text","slice","textBody","words","match","length"],"mappings":"AAAA;AAEA,MAAMA,MAAM,GAAIC,IAAD,IAAkB;AAC7B,QAAMD,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAW,CAAX,EAAc,GAAd,CAAf;AACA,SAAQ,GAAEF,MAAO,KAAjB;AACH,CAHD;;AAKA,MAAMG,QAAQ,GAAIF,IAAD,IAAe;AAE5B,QAAMG,KAAK,GAAGH,IAAI,CAACI,KAAL,CAAW,QAAX,EAAqBC,MAAnC;;AACA,MAAIF,KAAK,IAAI,GAAb,EAAkB,CACd;AACH;;AACD,SAAOA,KAAK,IAAI,GAAT,GAAeH,IAAf,GAAsBD,MAAM,CAACC,IAAD,CAAnC;AACH,CAPD;;AASA,SAASE,QAAT,EAAmBH,MAAnB","sourcesContent":["// adding\n\nconst slicer = (text: string) => {\n    const slicer = text.slice(0, 200)\n    return `${slicer}...`\n}\n\nconst textBody = (text: any) => {\n\n    const words = text.match(/(\\w+)/g).length\n    if (words >= 100) {\n        // console.log(words)\n    }\n    return words <= 100 ? text : slicer(text)\n}\n\nexport { textBody, slicer }\n"]},"metadata":{},"sourceType":"module"}