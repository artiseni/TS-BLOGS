{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const dataUser = createSlice({\n  name: 'blogs',\n  initialState: {\n    token_keys: {},\n    user: {},\n    display: true,\n    content: [],\n    button_number: 0,\n    str: '',\n    loading: false,\n    page: {\n      currentPage: 1,\n      take: 4\n    },\n    edit_post: {\n      infouser: {\n        username: ''\n      },\n      updatedAt: '',\n      title: '',\n      content: ''\n    },\n    index_post: [],\n    myPost: [[], 0]\n  },\n  reducers: {\n    setLoading: state => {\n      state.loading = true;\n    },\n    setString: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.str = payload;\n    },\n    setButtonNumber: state => {\n      state.button_number += 1;\n    },\n    changeButtonNumber: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.button_number = payload;\n    },\n    setContent: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.content = payload;\n    },\n    firstPage: state => {\n      state.page.currentPage = 1;\n      state.page.skip = state.page.currentPage * state.page.take - state.page.take;\n    },\n    targetPage: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.page.currentPage = payload;\n      state.page.skip = state.page.currentPage * state.page.take - state.page.take;\n    },\n    nextPage: state => {\n      state.page.currentPage += 1;\n      state.page.skip = state.page.currentPage * state.page.take - state.page.take;\n    },\n    previousPage: state => {\n      state.page.currentPage -= 1;\n      state.page.skip = state.page.currentPage * state.page.take - state.page.take;\n    },\n    setDisplay: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.display = payload;\n    },\n    setIndexPost: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.index_post = payload;\n    },\n    setMyPost: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.myPost = payload;\n    },\n    setEditPost: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.edit_post = payload;\n    },\n    setDataUser: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.user = payload;\n    },\n    setTokenKeys: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.token_keys = payload;\n    },\n    reset: state => {\n      state.button_number = 0;\n      state.user = {};\n      state.token_keys = {};\n      state.myPost = [[], 0];\n    }\n  }\n});\nexport const {\n  setDataUser,\n  reset,\n  setIndexPost,\n  setMyPost,\n  setTokenKeys,\n  setEditPost,\n  setDisplay,\n  nextPage,\n  previousPage,\n  firstPage,\n  targetPage,\n  setContent,\n  setButtonNumber,\n  changeButtonNumber,\n  setString,\n  setLoading\n} = dataUser.actions;\nexport default dataUser.reducer;","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-16/client/src/store/hooks.ts"],"names":["createSlice","dataUser","name","initialState","token_keys","user","display","content","button_number","str","loading","page","currentPage","take","edit_post","infouser","username","updatedAt","title","index_post","myPost","reducers","setLoading","state","setString","action","payload","setButtonNumber","changeButtonNumber","setContent","firstPage","skip","targetPage","nextPage","previousPage","setDisplay","setIndexPost","setMyPost","setEditPost","setDataUser","setTokenKeys","reset","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const dataUser = createSlice({\n\n    name: 'blogs',\n    initialState: {\n        token_keys: {} as object,\n        user: {} as object,\n        display: true as boolean,\n        content: [],\n        button_number: 0 as number,\n        str: '' as string,\n        loading: false,\n\n        page: {\n            currentPage: 1 as number,\n            take: 4 as number\n        } as any,\n\n        edit_post: {\n            infouser: { username: '' },\n            updatedAt: '',\n            title: '',\n            content: ''\n        } as object,\n\n        index_post: [] as object[],\n        myPost: [[], 0] as any[]\n    },\n\n    reducers: {\n\n        setLoading: state => {\n            state.loading = true\n        },\n\n        setString: (state, action) => {\n            const { payload } = action\n            state.str = payload\n        },\n\n        setButtonNumber: state => {\n            state.button_number += 1\n        },\n\n        changeButtonNumber: (state, action) => {\n            const { payload } = action\n            state.button_number = payload\n        },\n\n        setContent: (state, action) => {\n            const { payload } = action\n            state.content = payload\n        },\n\n        firstPage: state => {\n            state.page.currentPage = 1\n            state.page.skip = (state.page.currentPage * state.page.take) - state.page.take\n        },\n\n        targetPage: (state, action) => {\n            const { payload } = action\n            state.page.currentPage = payload\n            state.page.skip = (state.page.currentPage * state.page.take) - state.page.take\n        },\n\n        nextPage: state => {\n            state.page.currentPage += 1\n            state.page.skip = (state.page.currentPage * state.page.take) - state.page.take\n        },\n\n        previousPage: state => {\n            state.page.currentPage -= 1\n            state.page.skip = (state.page.currentPage * state.page.take) - state.page.take\n        },\n\n        setDisplay: (state, action) => {\n            const { payload } = action\n            state.display = payload\n        },\n\n        setIndexPost: (state, action) => {\n            const { payload } = action\n            state.index_post = payload\n        },\n\n        setMyPost: (state, action) => {\n            const { payload } = action\n            state.myPost = payload\n        },\n\n        setEditPost: (state, action) => {\n            const { payload } = action\n            state.edit_post = payload\n        },\n\n        setDataUser: (state, action) => {\n            const { payload } = action\n            state.user = payload\n        },\n\n        setTokenKeys: (state, action) => {\n            const { payload } = action\n            state.token_keys = payload\n        },\n\n        reset: state => {\n            state.button_number = 0\n            state.user = {}\n            state.token_keys = {}\n            state.myPost = [[], 0]\n        }\n    }\n})\n\nexport const {\n    setDataUser, reset, setIndexPost,\n    setMyPost, setTokenKeys, setEditPost,\n    setDisplay, nextPage, previousPage,\n    firstPage, targetPage, setContent,\n    setButtonNumber, changeButtonNumber,\n    setString, setLoading\n} = dataUser.actions\n\nexport default dataUser.reducer"]},"metadata":{},"sourceType":"module"}