{"ast":null,"code":"var _jsxFileName = \"/home/linux/Documents/IMIN/AUGUST-16/client/src/pages/Index.tsx\";\nimport { Component } from 'react';\nimport Navigation from '../components/Navigation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Index extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      console.log(`Mounted`);\n      this.nextPage();\n    };\n\n    this.shouldComponentUpdate = () => {\n      // console.log(`Should be updated? --> ${this.data}`)\n      return true;\n    };\n\n    this.componentDidUpdate = () => {\n      console.log(`Updated`);\n    };\n\n    this.componentWillUnmount = () => {\n      console.log(`Will unmount`);\n    };\n\n    this.updatePage = async () => {// console.log(`Update page ${this.state.params}`)\n      // const api = new Api(this.state.params)\n      // const data = await api.index()\n      // this.setState({ data, loading: true })\n      // const count = Math.ceil(this.state.data[1] / this.state.params.take)\n      // this.setState({ countData: count })\n    };\n\n    this.nextPage = async () => {// this.setState({\n      //     params: {\n      //         currentPage: this.state.params.currentPage + 1,\n      //         take: 4\n      //     }\n      // })\n      // const api = new Api(this.state.params)\n      // const data = await api.index()\n      // this.setState({ data, loading: true })\n      // const count = Math.ceil(this.state.data[1] / this.state.params.take)\n      // this.setState({ countData: count })\n    };\n\n    this.previousPage = async () => {// this.setState({\n      //     params: {\n      //         currentPage: this.state.params.currentPage - 1,\n      //         take: 4\n      //     }\n      // })\n      // const api = new Api(this.state.params)\n      // const data = await api.index()\n      // this.setState({ data, loading: true })\n    };\n\n    this.targetPage = async num => {// this.setState({\n      //     params: {\n      //         currentPage: num,\n      //         take: 4\n      //     }\n      // })\n      // const api = new Api(this.state.params)\n      // const data = await api.index()\n      // this.setState({ data, loading: true })\n    };\n\n    this.render = () => {\n      // console.log(`Render`)\n      // console.log(this.state.data[0])\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    };\n  }\n\n}\n\nIndex.getDerivedStateFromProps = (props, state) => {\n  // console.log(`getDerived`)\n  return null;\n};\n\nconst mapStateToProps = state => {\n  page: state.page;\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loading: () => dispatch()\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-16/client/src/pages/Index.tsx"],"names":["Component","Navigation","Index","componentDidMount","console","log","nextPage","shouldComponentUpdate","componentDidUpdate","componentWillUnmount","updatePage","previousPage","targetPage","num","render","getDerivedStateFromProps","props","state","mapStateToProps","page","mapDispatchToProps","dispatch","loading"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;;AASA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAQ1BG,iBAR0B,GAQN,MAAM;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAa,SAAb;AACA,WAAKC,QAAL;AACH,KAXyB;;AAAA,SAa1BC,qBAb0B,GAaF,MAAe;AACnC;AACA,aAAO,IAAP;AACH,KAhByB;;AAAA,SAkB1BC,kBAlB0B,GAkBL,MAAY;AAC7BJ,MAAAA,OAAO,CAACC,GAAR,CAAa,SAAb;AACH,KApByB;;AAAA,SAsB1BI,oBAtB0B,GAsBH,MAAM;AACzBL,MAAAA,OAAO,CAACC,GAAR,CAAa,cAAb;AACH,KAxByB;;AAAA,SA0B1BK,UA1B0B,GA0Bb,YAA2B,CACpC;AACA;AACA;AACA;AACA;AACA;AACH,KAjCyB;;AAAA,SAmC1BJ,QAnC0B,GAmCf,YAAY,CACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACH,KAhDyB;;AAAA,SAkD1BK,YAlD0B,GAkDX,YAAY,CAEvB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACH,KA9DyB;;AAAA,SAgE1BC,UAhE0B,GAgEb,MAAOC,GAAP,IAAuB,CAEhC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEH,KA7EyB;;AAAA,SA+E1BC,MA/E0B,GA+EjB,MAAmB;AAExB;AACA;AAEA,0BACI;AAAA,gCACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,sBADJ;AA4CH,KAhIyB;AAAA;;AAAA;;AAAxBZ,K,CAGKa,wB,GAA2B,CAACC,KAAD,EAAaC,KAAb,KAA4B;AAC1D;AACA,SAAO,IAAP;AACH,C;;AA6HL,MAAMC,eAAe,GAAID,KAAD,IAAgB;AACpCE,EAAAA,IAAI,EAAEF,KAAK,CAACE,IAAN;AACT,CAFD;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,IAAmB;AAC1C,SAAO;AACHC,IAAAA,OAAO,EAAE,MAAMD,QAAQ;AADpB,GAAP;AAGH,CAJD;;AAMA,eAAenB,KAAf","sourcesContent":["import { Component } from 'react'\nimport Navigation from '../components/Navigation'\nimport { Container, Row, Col, Card, Alert } from 'react-bootstrap'\nimport HiddenButton from '../components/HiddenButton'\nimport Api from '../api/Api'\nimport Pagination from '../components/Pagin'\nimport { setLoading } from '../store/hooks'\n\n\n\nclass Index extends Component {\n\n\n    static getDerivedStateFromProps = (props: any, state: any) => {\n        // console.log(`getDerived`)\n        return null\n    }\n\n    componentDidMount = () => {\n        console.log(`Mounted`)\n        this.nextPage()\n    }\n\n    shouldComponentUpdate = (): boolean => {\n        // console.log(`Should be updated? --> ${this.data}`)\n        return true\n    }\n\n    componentDidUpdate = (): void => {\n        console.log(`Updated`)\n    }\n\n    componentWillUnmount = () => {\n        console.log(`Will unmount`)\n    }\n\n    updatePage = async (): Promise<void> => {\n        // console.log(`Update page ${this.state.params}`)\n        // const api = new Api(this.state.params)\n        // const data = await api.index()\n        // this.setState({ data, loading: true })\n        // const count = Math.ceil(this.state.data[1] / this.state.params.take)\n        // this.setState({ countData: count })\n    }\n\n    nextPage = async () => {\n        // this.setState({\n        //     params: {\n        //         currentPage: this.state.params.currentPage + 1,\n        //         take: 4\n        //     }\n        // })\n        // const api = new Api(this.state.params)\n        // const data = await api.index()\n        // this.setState({ data, loading: true })\n\n        // const count = Math.ceil(this.state.data[1] / this.state.params.take)\n        // this.setState({ countData: count })\n    }\n\n    previousPage = async () => {\n\n        // this.setState({\n        //     params: {\n        //         currentPage: this.state.params.currentPage - 1,\n        //         take: 4\n        //     }\n        // })\n\n        // const api = new Api(this.state.params)\n        // const data = await api.index()\n        // this.setState({ data, loading: true })\n    }\n\n    targetPage = async (num: number) => {\n\n        // this.setState({\n        //     params: {\n        //         currentPage: num,\n        //         take: 4\n        //     }\n        // })\n\n        // const api = new Api(this.state.params)\n        // const data = await api.index()\n        // this.setState({ data, loading: true })\n\n    }\n\n    render = (): JSX.Element => {\n\n        // console.log(`Render`)\n        // console.log(this.state.data[0])\n\n        return (\n            <>\n                <Navigation />\n                <div className=\"App\">\n                    {/* <Container>\n                        <Row>\n                            <Col md>\n                                {this.state.loading ?\n                                    this.state.data[0].map((result: any) =>\n                                        <div className='App blogs' key={result.uuid}>\n                                            <Card>\n                                                <Card.Body>\n                                                    <Card.Text>\n                                                        By : {result.infouser.username}\n                                                    </Card.Text>\n                                                    <Card.Text>\n                                                        Last update : {result.updatedAt}\n                                                    </Card.Text>\n                                                    <Card.Title>\n                                                        {result.title}\n                                                    </Card.Title>\n                                                    <hr />\n                                                    <Card.Text className=\"content\">\n                                                        {this.hidden.textBody(result.content)}\n                                                    </Card.Text>\n                                                </Card.Body>\n                                                <HiddenButton text={result.content} />\n                                            </Card>\n                                            <br />\n                                        </div>\n                                    ) : <Alert variant=\"success\">Processing data... </Alert>\n                                }\n                            </Col>\n                        </Row>\n                    </Container> */}\n                    {/* <Pagination\n                        count={this.state.countData}\n                        nextPage={this.nextPage}\n                        previousPage={this.previousPage}\n                        targetPage={this.targetPage}\n                    /> */}\n                </div>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state: any) => {\n    page: state.page\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        loading: () => dispatch()\n    }\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}