{"ast":null,"code":"var _jsxFileName = \"/home/linux/Documents/IMIN/AUGUST-04/client/src/pages/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Card, Form, Button } from 'react-bootstrap';\nimport Navigation from '../components/Navigation';\nimport Api from '../api/Api';\nimport { setDataUser } from '../store/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [getValue, setValue] = useState({});\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const getText = e => {\n    const {\n      name\n    } = e.target;\n    const {\n      value\n    } = e.target;\n    setValue({ ...getValue,\n      [name]: value\n    });\n  };\n\n  const submit = async () => {\n    const api = new Api(getValue);\n    const res = await api.login();\n    console.log(res);\n\n    if (res) {\n      dispatch(setDataUser(res));\n      history.push('/home');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      logout: {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              name: \"email\",\n              onChange: e => getText(e),\n              placeholder: \"example@email.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              name: \"password\",\n              onChange: e => getText(e),\n              placeholder: \"Your password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"dark\",\n            onClick: submit,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"8BKRy9ZVJQc/fQxQMmzrdkQxvhU=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-04/client/src/pages/Login.tsx"],"names":["useState","useDispatch","useHistory","Card","Form","Button","Navigation","Api","setDataUser","Login","getValue","setValue","dispatch","history","getText","e","name","target","value","submit","api","res","login","console","log","push"],"mappings":"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","sourcesContent":["import { FC, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Card, Form, Button } from 'react-bootstrap'\nimport Navigation from '../components/Navigation'\nimport Api from '../api/Api'\nimport { setDataUser } from '../store/data'\n\n\nconst Login: FC = () => {\n\n    const [getValue, setValue] = useState({})\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const getText = (e: any) => {\n        const { name }: any = e.target\n        const { value }: any = e.target\n        setValue({ ...getValue, [name]: value })\n    }\n\n    const submit = async () => {\n        const api = new Api(getValue)\n        const res: any = await api.login()\n        console.log(res)\n        if (res) {\n            dispatch(setDataUser(res))\n            history.push('/home')\n        }\n    }\n\n    return (\n        <>\n            <Navigation logout={{}} />\n            <div className=\"App\">\n                <Card>\n                    <Form>\n                        <Form.Group controlId=\"formEmail\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" name=\"email\" onChange={e => getText(e)} placeholder=\"example@email.com\" />\n                        </Form.Group>\n                        <Form.Group controlId=\"formPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" name=\"password\" onChange={e => getText(e)} placeholder=\"Your password\" />\n                        </Form.Group>\n                        <br />\n                        <Button variant=\"dark\" onClick={submit}>Login</Button>\n                    </Form>\n                </Card>\n            </div>\n        </>\n    )\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}