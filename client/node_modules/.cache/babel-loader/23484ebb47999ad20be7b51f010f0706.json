{"ast":null,"code":"var _jsxFileName = \"/home/linux/Documents/IMIN/AUGUST-16/client/src/pages/Signup.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setDataUser } from '../store/data';\nimport { useHistory } from 'react-router-dom';\nimport { Card, Form, Button } from 'react-bootstrap';\nimport Navigation from '../components/Navigation';\nimport Api from '../api/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const [getValue, setValue] = useState({});\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const getText = e => {\n    const {\n      name\n    } = e.target;\n    const {\n      value\n    } = e.target;\n    setValue({ ...getValue,\n      [name]: value\n    });\n  };\n\n  const submit = async () => {\n    const data = validate();\n    const api = new Api(data);\n    const value = await api.register();\n\n    if (value) {\n      // console.log(value)\n      dispatch(setDataUser(value));\n      history.push('/home');\n    }\n  };\n\n  const validate = () => {\n    const {\n      username,\n      email,\n      password,\n      password_retype\n    } = getValue;\n    const key = Object.keys(getValue);\n\n    if (key.length < 4) {\n      alert(`Data can't be empty!`);\n    } else if (username === '' || email === '' || password === '' || password_retype === '') {\n      alert(`Data can't be empty!`);\n    } else if (password !== password_retype) {\n      alert(`Password not same!`);\n    } else {\n      return getValue;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formUsername\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"username\",\n              onChange: e => getText(e),\n              placeholder: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              name: \"email\",\n              onChange: e => getText(e),\n              placeholder: \"example@email.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"We'll never share your email!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              name: \"password\",\n              onChange: e => getText(e),\n              placeholder: \"Your password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formPassword_retype\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              name: \"password_retype\",\n              onChange: e => getText(e),\n              placeholder: \"Retype password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"dark\",\n            onClick: submit,\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Signup, \"8BKRy9ZVJQc/fQxQMmzrdkQxvhU=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-16/client/src/pages/Signup.tsx"],"names":["useState","useDispatch","setDataUser","useHistory","Card","Form","Button","Navigation","Api","Signup","getValue","setValue","dispatch","history","getText","e","name","target","value","submit","data","validate","api","register","push","username","email","password","password_retype","key","Object","keys","length","alert"],"mappings":"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","sourcesContent":["import { FC, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setDataUser } from '../store/data'\nimport { useHistory } from 'react-router-dom'\nimport { Card, Form, Button } from 'react-bootstrap'\nimport Navigation from '../components/Navigation'\nimport Api from '../api/Api'\n\n\nconst Signup: FC = () => {\n\n    const [getValue, setValue] = useState({})\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const getText = (e: any) => {\n        const { name }: any = e.target\n        const { value }: any = e.target\n        setValue({ ...getValue, [name]: value })\n    }\n\n    const submit = async () => {\n        const data: any = validate()\n        const api = new Api(data)\n        const value: any = await api.register()\n        if (value) {\n            // console.log(value)\n            dispatch(setDataUser(value))\n            history.push('/home')\n        }\n    }\n\n    const validate = () => {\n\n        const { username, email, password, password_retype }: any = getValue\n        const key = Object.keys(getValue)\n\n        if (key.length < 4) {\n            alert(`Data can't be empty!`)\n        } else if (username === '' || email === '' || password === '' || password_retype === '') {\n            alert(`Data can't be empty!`)\n        } else if (password !== password_retype) {\n            alert(`Password not same!`)\n        } else {\n            return getValue\n        }\n    }\n\n    return (\n        <>\n            <Navigation />\n            <div className=\"App\">\n                <Card>\n                    <Form>\n                        <Form.Group controlId=\"formUsername\">\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control type=\"text\" name=\"username\" onChange={e => getText(e)} placeholder=\"Username\" />\n                        </Form.Group>\n                        <Form.Group controlId=\"formEmail\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" name=\"email\" onChange={e => getText(e)} placeholder=\"example@email.com\" />\n                            <Form.Text className=\"text-muted\">\n                                We'll never share your email!\n                        </Form.Text>\n                        </Form.Group>\n                        <Form.Group controlId=\"formPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" name=\"password\" onChange={e => getText(e)} placeholder=\"Your password\" />\n                        </Form.Group>\n                        <Form.Group controlId=\"formPassword_retype\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" name=\"password_retype\" onChange={e => getText(e)} placeholder=\"Retype password\" />\n                        </Form.Group>\n                        <br />\n                        <Button variant=\"dark\" onClick={submit}>Signup</Button>\n                    </Form>\n                </Card>\n            </div>\n        </>\n    )\n}\n\nexport default Signup"]},"metadata":{},"sourceType":"module"}