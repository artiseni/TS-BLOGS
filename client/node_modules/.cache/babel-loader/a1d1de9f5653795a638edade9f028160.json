{"ast":null,"code":"import axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { setIndexPost } from '../store/data'; // import { config as dotenv } from 'dotenv'\n\nexport default class Api {\n  constructor() {\n    var _s = $RefreshSig$();\n\n    this.api = void 0;\n    this.index = _s(async () => {\n      _s();\n\n      const dispatch = useDispatch();\n      const res = await this.api.get('/index');\n\n      if (res) {\n        const {\n          data\n        } = res;\n        dispatch(setIndexPost(data));\n      }\n    }, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n      return [useDispatch];\n    });\n    this.api = axios.create({\n      baseURL: `http://localhost:5000`,\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-04/client/src/api/Api.ts"],"names":["axios","useDispatch","setIndexPost","Api","constructor","api","index","dispatch","res","get","data","create","baseURL","headers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,eAA7B,C,CACA;;AAGA,eAAe,MAAMC,GAAN,CAAU;AAIrBC,EAAAA,WAAW,GAAG;AAAA;;AAAA,SAFdC,GAEc;AAAA,SAUdC,KAVc,MAUN,YAA2B;AAAA;;AAC/B,YAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,YAAMO,GAAQ,GAAG,MAAM,KAAKH,GAAL,CAASI,GAAT,CAAa,QAAb,CAAvB;;AACA,UAAID,GAAJ,EAAS;AACL,cAAM;AAAEE,UAAAA;AAAF,YAAWF,GAAjB;AACAD,QAAAA,QAAQ,CAACL,YAAY,CAACQ,IAAD,CAAb,CAAR;AACH;AACJ,KAjBa;AAAA,cAWOT,WAXP;AAAA;AAEV,SAAKI,GAAL,GAAWL,KAAK,CAACW,MAAN,CAAa;AACpBC,MAAAA,OAAO,EAAG,uBADU;AAEpBC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAFW,KAAb,CAAX;AAMH;;AAZoB","sourcesContent":["import axios from 'axios'\nimport { useDispatch } from 'react-redux'\nimport { setIndexPost } from '../store/data'\n// import { config as dotenv } from 'dotenv'\n\n\nexport default class Api {\n\n    api: any\n\n    constructor() {\n\n        this.api = axios.create({\n            baseURL: `http://localhost:5000`,\n            headers: {\n                \"Content-type\": \"application/json\"\n            }\n        })\n    }\n\n    index = async (): Promise<void> => {\n        const dispatch = useDispatch()\n        const res: any = await this.api.get('/index')\n        if (res) {\n            const { data } = res\n            dispatch(setIndexPost(data))\n        }\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}