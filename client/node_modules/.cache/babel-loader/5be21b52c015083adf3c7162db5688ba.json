{"ast":null,"code":"var _jsxFileName = \"/home/linux/Documents/IMIN/AUGUST-04/client/src/pages/Index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setIndexPost, setContent } from '../store/data';\nimport { Container, Row, Col, Card, Alert, Button } from 'react-bootstrap';\nimport Navigation from '../components/Navigation';\nimport Pagination from '../components/Pagination';\nimport Api from '../api/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const {\n    index_post\n  } = useSelector(state => state.data);\n  const {\n    page\n  } = useSelector(state => state.page);\n  const {\n    skip,\n    take\n  } = page;\n  const countPosts = index_post[1];\n  const count = Math.ceil(countPosts / page.take);\n  useEffect(() => {\n    const fetch = async () => {\n      setLoading(true);\n      const api = new Api({});\n      const data = await api.index({\n        skip,\n        take\n      });\n      dispatch(setIndexPost(data));\n    };\n\n    fetch();\n  }, [dispatch, setLoading, skip, take]);\n  const content_text = [];\n\n  const content = text => {\n    const slicer = text.slice(0, 200);\n    const words = text.match(/(\\w+)/g).length;\n\n    if (words >= 100) {\n      content_text.push(text);\n    }\n\n    return words <= 100 ? text : `${slicer}...`;\n  };\n\n  const displayRead = text => {\n    const words = text.match(/(\\w+)/g).length;\n    let num = 0;\n\n    const displayfull = e => {\n      e.target.id = 'hide';\n      const hide = document.getElementById('hide');\n      num++;\n\n      if (num === 1) {\n        dispatch(setContent(content_text));\n        hide.innerHTML = 'Show Less';\n      } else if (num === 2) {\n        console.log(num);\n        hide.innerHTML = 'Read More';\n        return num = 0;\n      }\n    };\n\n    return words > 100 ? /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"dark\",\n      onClick: displayfull,\n      children: \"Read More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 30\n    }, this) : null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: true,\n            children: loading ? index_post[0].map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"App blogs\",\n              children: [/*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: [\"By : \", result.infouser.username]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: [\"Last update : \", result.updatedAt]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: result.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    className: \"content\",\n                    children: content(result.content)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 45\n                }, this), displayRead(result.content)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 41\n              }, this)]\n            }, result.uuid, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this)) : /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"success\",\n              children: \"Data sedang diproses... \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      count: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Index, \"p22l3g6ZsO0ZQrt51WzfjqBU19w=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-04/client/src/pages/Index.tsx"],"names":["useEffect","useState","useDispatch","useSelector","setIndexPost","setContent","Container","Row","Col","Card","Alert","Button","Navigation","Pagination","Api","Index","dispatch","loading","setLoading","index_post","state","data","page","skip","take","countPosts","count","Math","ceil","fetch","api","index","content_text","content","text","slicer","slice","words","match","length","push","displayRead","num","displayfull","e","target","id","hide","document","getElementById","innerHTML","console","log","map","result","infouser","username","updatedAt","title","uuid"],"mappings":"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","sourcesContent":["import { FC, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setIndexPost, setContent } from '../store/data'\nimport { Container, Row, Col, Card, Alert, Button } from 'react-bootstrap'\nimport Navigation from '../components/Navigation'\nimport Pagination from '../components/Pagination'\nimport Api from '../api/Api'\n\n\nconst Index: FC = () => {\n\n    const dispatch = useDispatch()\n    const [loading, setLoading] = useState<boolean>(false)\n    const { index_post }: any = useSelector((state: any) => state.data)\n    const { page } = useSelector((state: any) => state.page)\n    const { skip, take } = page\n\n    const countPosts = index_post[1]\n    const count = Math.ceil(countPosts / page.take)\n\n    useEffect(() => {\n        const fetch = async (): Promise<void> => {\n            setLoading(true)\n            const api = new Api({})\n            const data = await api.index({ skip, take })\n            dispatch(setIndexPost(data))\n        }\n        fetch()\n    }, [dispatch, setLoading, skip, take])\n\n\n    const content_text: any = []\n\n    const content = (text: any) => {\n        const slicer = text.slice(0, 200)\n        const words = text.match(/(\\w+)/g).length\n\n        if (words >= 100) {\n            content_text.push(text)\n        }\n\n        return words <= 100 ? text : `${slicer}...`\n    }\n\n    const displayRead: any = (text: any) => {\n        const words = text.match(/(\\w+)/g).length\n        let num: number = 0\n\n        const displayfull = (e: any) => {\n            e.target.id = 'hide'\n            const hide: any = document.getElementById('hide')\n\n            num++\n            if (num === 1) {\n                dispatch(setContent(content_text))\n                hide.innerHTML = 'Show Less'\n            } else if (num === 2) {\n                console.log(num)\n                hide.innerHTML = 'Read More'\n                return num = 0\n            }\n        }\n\n        return words > 100 ? <Button variant=\"dark\" onClick={displayfull}>Read More</Button> : null\n    }\n\n    return (\n        <>\n            <Navigation />\n            <div className=\"App\">\n                <Container>\n                    <Row>\n                        <Col md>\n                            {loading ?\n                                index_post[0].map((result: any) =>\n                                    <div className='App blogs' key={result.uuid}>\n                                        <Card>\n                                            <Card.Body>\n                                                <Card.Text>\n                                                    By : {result.infouser.username}\n                                                </Card.Text>\n                                                <Card.Text>\n                                                    Last update : {result.updatedAt}\n                                                </Card.Text>\n                                                <Card.Title>\n                                                    {result.title}\n                                                </Card.Title>\n                                                <hr />\n                                                <Card.Text className=\"content\">\n                                                    {content(result.content)}\n                                                </Card.Text>\n                                            </Card.Body>\n                                            {displayRead(result.content)}\n                                        </Card>\n                                        <br />\n                                    </div>\n                                ) : <Alert variant=\"success\">Data sedang diproses... </Alert>\n                            }\n                        </Col>\n                    </Row>\n                </Container>\n            </ div>\n            <Pagination count={count} />\n        </>\n    )\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}