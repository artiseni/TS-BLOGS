{"ast":null,"code":"var _jsxFileName = \"/home/linux/Documents/IMIN/AUGUST-04/client/src/components/Myposts.tsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setEditPost, setDisplay, setContent } from '../store/data';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport Editpost from './Editpost';\nimport Pagination from './Pagination';\nimport Api from '../api/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Myposts = () => {\n  _s();\n\n  const {\n    myPost,\n    user,\n    display\n  } = useSelector(state => state.data);\n  const {\n    page,\n    content\n  } = useSelector(state => state.page);\n  const key = Object.keys(user);\n  const history = useHistory();\n  const dispatch = useDispatch(); // const { index_post } = useSelector((state: any) => state.data)\n\n  const countPosts = myPost[1];\n  const count = Math.ceil(countPosts / page.take);\n\n  if (key.length === 0) {\n    history.push('/');\n  }\n\n  const btnEdit = result => {\n    console.log(result);\n    dispatch(setEditPost(result));\n    dispatch(setDisplay(false));\n  };\n\n  const btnDelete = async uuid => {\n    const api = new Api({});\n    const data = await api.deletePost({\n      uuid\n    });\n\n    if (data) {\n      window.location.reload();\n    }\n  }; // less-more\n\n\n  const content_text = [];\n  let getNumber = 0;\n\n  const contentData = text => {\n    // --> ini\n    const words = text.match(/(\\w+)/g).length;\n\n    if (words >= 100) {\n      content_text.push(text);\n    }\n\n    return words <= 100 ? text : slicer(text);\n  };\n\n  const fullContentReader = text => {\n    // --> ini\n    const words = text.match(/(\\w+)/g).length;\n    getNumber++;\n    return words > 100 ? /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"dark\",\n      className: \"thisButton\",\n      id: `${getNumber}`,\n      onClick: displayfull,\n      children: \"Read More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 30\n    }, this) : null;\n  };\n\n  const slicer = text => {\n    const slicer = text.slice(0, 200);\n    return slicer;\n  };\n\n  const displayfull = e => {\n    let {\n      textContent,\n      id\n    } = e.target;\n    const data_id = document.getElementById(id);\n    const {\n      parentNode\n    } = data_id;\n    const parentDiv = parentNode.childNodes[0];\n    const text_content = parentDiv.childNodes[4];\n    const index = parseInt(id) - 1;\n    dispatch(setContent(content_text)); // console.log(index)\n\n    if (textContent === 'Read More') {\n      text_content.innerHTML = content[index];\n      data_id.innerHTML = 'Show less';\n    } else {\n      text_content.innerHTML = slicer(content[index]);\n      data_id.innerHTML = 'Read More';\n    }\n  };\n\n  switch (myPost[1]) {\n    case 0:\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: true,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"App blogs\",\n                children: [/*#__PURE__*/_jsxDEV(Card, {\n                  children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                      children: \"No posts yet\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                      children: \"Let's add your first post!\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"dark\",\n                      onClick: () => history.push('/home'),\n                      children: \"Add\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this);\n\n    default:\n      if (display === true) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [myPost[0].map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"App blogs\",\n            children: [/*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [\"By : \", result.infouser.username]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [\"Last update : \", result.updatedAt]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: result.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: contentData(result.content)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"dark\",\n                  onClick: () => btnEdit(result),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 45\n                }, this), \" \", ' ', /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"dark\",\n                  onClick: () => btnDelete(result.uuid),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 45\n                }, this), \" \", ' ', fullContentReader(result.content)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 37\n            }, this)]\n          }, result.uuid, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(Pagination, {\n            count: count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Editpost, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 24\n        }, this);\n      }\n\n  }\n};\n\n_s(Myposts, \"QUJopq7PXSDA3otvLjNPD3KdvVM=\", false, function () {\n  return [useSelector, useSelector, useHistory, useDispatch];\n});\n\n_c = Myposts;\nexport default Myposts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Myposts\");","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-04/client/src/components/Myposts.tsx"],"names":["useSelector","useDispatch","setEditPost","setDisplay","setContent","Container","Row","Col","Card","Button","useHistory","Editpost","Pagination","Api","Myposts","myPost","user","display","state","data","page","content","key","Object","keys","history","dispatch","countPosts","count","Math","ceil","take","length","push","btnEdit","result","console","log","btnDelete","uuid","api","deletePost","window","location","reload","content_text","getNumber","contentData","text","words","match","slicer","fullContentReader","displayfull","slice","e","textContent","id","target","data_id","document","getElementById","parentNode","parentDiv","childNodes","text_content","index","parseInt","innerHTML","map","infouser","username","updatedAt","title"],"mappings":"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","sourcesContent":["import { FC } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setEditPost, setDisplay, setContent } from '../store/data'\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport Editpost from './Editpost'\nimport Pagination from './Pagination'\nimport Api from '../api/Api'\n\n\nconst Myposts: FC = () => {\n\n    const { myPost, user, display } = useSelector((state: any) => state.data)\n    const { page, content } = useSelector((state: any) => state.page)\n    const key = Object.keys(user)\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    // const { index_post } = useSelector((state: any) => state.data)\n    const countPosts = myPost[1]\n    const count = Math.ceil(countPosts / page.take)\n\n    if (key.length === 0) {\n        history.push('/')\n    }\n\n    const btnEdit = (result: any) => {\n        console.log(result)\n        dispatch(setEditPost(result))\n        dispatch(setDisplay(false))\n    }\n\n    const btnDelete = async (uuid: any) => {\n        const api = new Api({})\n        const data: any = await api.deletePost({ uuid })\n        if (data) {\n            window.location.reload()\n        }\n    }\n\n\n    // less-more\n\n    const content_text: any = []\n    let getNumber = 0\n\n    const contentData = (text: any) => { // --> ini\n\n        const words = text.match(/(\\w+)/g).length\n        if (words >= 100) {\n            content_text.push(text)\n        }\n        return words <= 100 ? text : slicer(text)\n    }\n\n    const fullContentReader: any = (text: any) => { // --> ini\n        const words = text.match(/(\\w+)/g).length\n        getNumber++\n        return words > 100 ? <Button variant=\"dark\" className=\"thisButton\" id={`${getNumber}`} onClick={displayfull}>Read More</Button> : null\n    }\n\n    const slicer = (text: string) => {\n        const slicer = text.slice(0, 200)\n        return slicer\n    }\n\n    const displayfull = (e: any) => {\n        let { textContent, id } = e.target\n        const data_id: any = document.getElementById(id)\n        const { parentNode } = data_id\n        const parentDiv = parentNode.childNodes[0]\n        const text_content = parentDiv.childNodes[4]\n        const index = parseInt(id) - 1\n\n        dispatch(setContent(content_text))\n\n        // console.log(index)\n\n        if (textContent === 'Read More') {\n            text_content.innerHTML = content[index]\n            data_id.innerHTML = 'Show less'\n        } else {\n            text_content.innerHTML = slicer(content[index])\n            data_id.innerHTML = 'Read More'\n        }\n    }\n\n\n    switch (myPost[1]) {\n        case 0:\n            return (\n                <div className=\"App\">\n                    <Container>\n                        <Row>\n                            <Col md>\n                                <div className='App blogs'>\n                                    <Card>\n                                        <Card.Body>\n                                            <Card.Title>\n                                                No posts yet\n                                            </Card.Title>\n                                            <hr />\n                                            <Card.Text>\n                                                Let's add your first post!\n                                            </Card.Text>\n                                            <Button variant=\"dark\" onClick={() => history.push('/home')}>Add</Button>\n                                        </Card.Body>\n                                    </Card>\n                                    <br />\n                                </div>\n                            </Col>\n                        </Row>\n                    </Container>\n                </ div>\n            )\n\n        default:\n            if (display === true) {\n                return (\n                    <>\n                        {\n                            myPost[0].map((result: any) =>\n                                <div className='App blogs' key={result.uuid} >\n                                    <Card>\n                                        <Card.Body>\n                                            <Card.Text>\n                                                By : {result.infouser.username}\n                                            </Card.Text>\n                                            <Card.Text>\n                                                Last update : {result.updatedAt}\n                                            </Card.Text>\n                                            <Card.Title>\n                                                {result.title}\n                                            </Card.Title>\n                                            <hr />\n                                            <Card.Text>\n                                                {contentData(result.content)}\n                                            </Card.Text>\n                                            <Button variant=\"dark\" onClick={() => btnEdit(result)}>Edit</Button> {' '}\n                                            <Button variant=\"dark\" onClick={() => btnDelete(result.uuid)}>Delete</Button> {' '}\n                                            {fullContentReader(result.content)}\n                                        </Card.Body>\n                                    </Card>\n                                    <br />\n                                </div>)\n                        }\n                        < Pagination count={count} />\n                    </>\n                )\n            } else {\n                return <Editpost />\n            }\n    }\n}\n\n\nexport default Myposts"]},"metadata":{},"sourceType":"module"}