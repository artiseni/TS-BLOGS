{"ast":null,"code":"var _jsxFileName = \"/home/linux/Documents/IMIN/AUGUST-16/client/src/pages/Myblogs.tsx\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Navigation from '../components/Navigation';\nimport { setMyPost } from '../store/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Myblogs extends Component {\n  constructor(...args) {\n    super(...args);\n    this.myPost = this.props.data.myPost;\n    this.user = this.props.data.user;\n\n    this.componentDidMount = () => {\n      const {\n        uuid\n      } = this.user;\n      console.log(uuid);\n    };\n\n    this.render = () => {\n      console.log(this.myPost);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"My blogs!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    };\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setMyPost: data => dispatch(setMyPost(data))\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Myblogs));","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-16/client/src/pages/Myblogs.tsx"],"names":["Component","connect","withRouter","Navigation","setMyPost","Myblogs","myPost","props","data","user","componentDidMount","uuid","console","log","render","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,SAAT,QAA0B,gBAA1B;;;;AAaA,MAAMC,OAAN,SAAsBL,SAAtB,CAA6C;AAAA;AAAA;AAAA,SAEzCM,MAFyC,GAE3B,KAAKC,KAAL,CAAWC,IAAX,CAAgBF,MAFW;AAAA,SAGzCG,IAHyC,GAG7B,KAAKF,KAAL,CAAWC,IAAX,CAAgBC,IAHa;;AAAA,SAMzCC,iBANyC,GAMrB,MAAM;AACtB,YAAM;AAAEC,QAAAA;AAAF,UAAW,KAAKF,IAAtB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KATwC;;AAAA,SAWzCG,MAXyC,GAWhC,MAAM;AAEXF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,MAAjB;AAGA,0BACI;AAAA,gCACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,sBADJ;AAwCH,KAxDwC;AAAA;;AAAA;;AA4D7C,MAAMS,eAAe,GAAIC,KAAD,KAAiB;AACrCR,EAAAA,IAAI,EAAEQ,KAAK,CAACR;AADyB,CAAjB,CAAxB;;AAIA,MAAMS,kBAAkB,GAAIC,QAAD,KAAoB;AAC3Cd,EAAAA,SAAS,EAAGI,IAAD,IAAeU,QAAQ,CAACd,SAAS,CAACI,IAAD,CAAV;AADS,CAApB,CAA3B;;AAIA,eAAeN,UAAU,CAACD,OAAO,CAACc,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CZ,OAA7C,CAAD,CAAzB","sourcesContent":["import { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap'\nimport { withRouter } from 'react-router-dom'\nimport Navigation from '../components/Navigation'\nimport { setMyPost } from '../store/hooks'\nimport Api from '../api/Api'\n\n\ninterface Props {\n    data: {\n        user: any\n        myPost: any\n    }\n    setMypost: any\n}\n\n\nclass Myblogs extends Component<Props | any> {\n\n    myPost: any = this.props.data.myPost\n    user: any = this.props.data.user\n\n\n    componentDidMount = () => {\n        const { uuid } = this.user\n        console.log(uuid)\n    }\n\n    render = () => {\n\n        console.log(this.myPost)\n\n\n        return (\n            <>\n                <Navigation />\n                <div className=\"App\">\n                    <h1>My blogs!</h1>\n                    {/* <Container>\n                        <Row>\n                            <Col md>\n                                {loading ?\n                                    this.props.page.index_post[0].map((result: any) =>\n                                        <div className='App blogs' key={result.uuid}>\n                                            <Card>\n                                                <Card.Body>\n                                                    <Card.Text>\n                                                        By : {result.infouser.username}\n                                                    </Card.Text>\n                                                    <Card.Text>\n                                                        Last update : {result.updatedAt}\n                                                    </Card.Text>\n                                                    <Card.Title>\n                                                        {result.title}\n                                                    </Card.Title>\n                                                    <hr />\n                                                    <Card.Text className=\"content\">\n                                                        {hidden.textBody(result.content)}\n                                                    </Card.Text>\n                                                </Card.Body>\n                                                <HiddenButton text={result.content} />\n                                            </Card>\n                                            <br />\n                                        </div>\n                                    ) : <Alert variant=\"success\">Processing data... </Alert>\n                                }\n                            </Col>\n                        </Row>\n                    </Container>\n                    <Paginate /> */}\n                </div>\n            </>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state: any) => ({\n    data: state.data\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    setMyPost: (data: any) => dispatch(setMyPost(data))\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Myblogs))\n"]},"metadata":{},"sourceType":"module"}