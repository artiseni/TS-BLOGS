{"ast":null,"code":"var _jsxFileName = \"/home/linux/Documents/IMIN/AUGUST-16/client/src/components/Navigation.tsx\";\nimport { Component } from 'react';\nimport { Navbar, Nav, Container } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reset } from '../store/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Navigation extends Component {\n  constructor(props) {\n    super(props);\n    this.path = void 0;\n\n    this.logout = () => {\n      this.props.reset();\n      this.props.history.push('/');\n    };\n\n    this.isLogin = () => {\n      const {\n        login\n      } = this.props.data;\n      const {\n        username\n      } = this.props.data.user;\n      return login === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation\",\n        children: /*#__PURE__*/_jsxDEV(Navbar, {\n          bg: \"dark\",\n          variant: \"dark\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n              href: \"/\",\n              children: \"TS Blogs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Nav, {\n              children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n                href: \"/login\",\n                active: this.path === '/login',\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n                href: \"/signup\",\n                active: this.path === '/signup',\n                children: \"SignUp\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation\",\n        children: /*#__PURE__*/_jsxDEV(Navbar, {\n          bg: \"dark\",\n          variant: \"dark\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n              href: \"/\",\n              children: \"TS Blogs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Nav, {\n              children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n                href: \"/home\",\n                active: this.path === `${username}`,\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n                href: \"/myblogs\",\n                active: this.path === '/myblogs',\n                children: \"My blogs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n                onClick: this.logout,\n                children: \"Logout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.render = () => {\n      return this.isLogin();\n    };\n\n    const {\n      pathname\n    } = this.props.location;\n    this.path = pathname;\n    console.log(this.props.data.login);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  reset: () => dispatch(reset())\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Navigation));","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-16/client/src/components/Navigation.tsx"],"names":["Component","Navbar","Nav","Container","withRouter","connect","reset","Navigation","constructor","props","path","logout","history","push","isLogin","login","data","username","user","render","pathname","location","console","log","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport { Navbar, Nav, Container } from 'react-bootstrap'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { reset } from '../store/hooks'\n\n\ninterface Props {\n    location: any\n    history: any\n    reset: any\n    data: {\n        user: any\n        login: boolean\n    }\n}\n\n\nclass Navigation extends Component<Props> {\n\n    path: string\n\n    constructor(props: any) {\n        super(props)\n        const { pathname } = this.props.location\n        this.path = pathname\n        console.log(this.props.data.login)\n    }\n\n    logout = () => {\n        this.props.reset()\n        this.props.history.push('/')\n    }\n\n    isLogin = (): JSX.Element => {\n\n        const { login } = this.props.data\n        const { username } = this.props.data.user\n\n        return login === false ?\n            <div className=\"navigation\">\n                <Navbar bg=\"dark\" variant=\"dark\">\n                    <Container>\n                        <Navbar.Brand href=\"/\">TS Blogs</Navbar.Brand>\n                        <Nav>\n                            <Nav.Link href=\"/login\" active={this.path === '/login'}>Login</Nav.Link>\n                            <Nav.Link href=\"/signup\" active={this.path === '/signup'} >SignUp</Nav.Link>\n                        </Nav>\n                    </Container>\n                </Navbar>\n            </div> :\n            <div className=\"navigation\">\n                <Navbar bg=\"dark\" variant=\"dark\">\n                    <Container>\n                        <Navbar.Brand href=\"/\">TS Blogs</Navbar.Brand>\n                        <Nav>\n                            <Nav.Link href=\"/home\" active={this.path === `${username}`}>Home</Nav.Link>\n                            <Nav.Link href=\"/myblogs\" active={this.path === '/myblogs'}>My blogs</Nav.Link>\n                            <Nav.Link onClick={this.logout} >Logout</Nav.Link>\n                        </Nav>\n                    </Container>\n                </Navbar>\n            </div>\n    }\n\n    render = (): JSX.Element => {\n        return this.isLogin()\n    }\n\n}\n\n\nconst mapStateToProps = (state: any) => ({\n    data: state.data\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    reset: () => dispatch(reset())\n})\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Navigation))"]},"metadata":{},"sourceType":"module"}