{"ast":null,"code":"var _jsxFileName = \"/home/linux/Documents/IMIN/AUGUST-16/client/src/components/Navigation.tsx\";\nimport { Component, createRef } from 'react';\nimport { Navbar, Nav, Container, Modal, Button, FormControl, Form } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reset, setIndexPost, setCountBlogs } from '../store/hooks';\nimport Api from '../api/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Navigation extends Component {\n  constructor(props) {\n    super(props);\n    this.path = void 0;\n    this.username = void 0;\n    this.uuid = void 0;\n    this.blogs = void 0;\n    this.wrapper = void 0;\n\n    this.logout = () => {\n      this.setState({\n        show: !this.state.show\n      });\n    };\n\n    this.handleYes = () => {\n      this.props.reset();\n      this.setState({\n        show: false\n      });\n      this.props.history.push('/');\n    };\n\n    this.myBlogs = () => {\n      this.props.history.push(`/${this.username}/myblogs`);\n      window.location.reload();\n    };\n\n    this.home = () => {\n      this.props.history.push(`/${this.username}`);\n    };\n\n    this.search = e => {\n      const {\n        value\n      } = e.target;\n      this.setState({\n        title: value\n      });\n    };\n\n    this.findData = async () => {\n      const {\n        title\n      } = this.state;\n\n      try {\n        const api = new Api({\n          title\n        });\n        const result = await api.search();\n\n        if (result) {\n          this.props.setCountBlogs(result[1]);\n          this.props.setIndexPost(result);\n        }\n      } catch (error) {\n        console.log(`${error}`);\n      }\n    };\n\n    this.isIndex = () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            onChange: this.search,\n            name: \"title\",\n            type: \"search\",\n            placeholder: \"Search\",\n            className: \"mr-2\",\n            \"aria-label\": \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.findData,\n            className: \"btnSearch\",\n            variant: \"outline-light\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)\n      }, void 0, false);\n    };\n\n    this.isLogin = () => {\n      const {\n        login\n      } = this.props.data;\n      return login === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation\",\n        children: /*#__PURE__*/_jsxDEV(Navbar, {\n          bg: \"dark\",\n          variant: \"dark\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n              href: \"/\",\n              children: \"TS Blogs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Nav, {\n              children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n                href: \"/login\",\n                active: this.path === '/login',\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n                href: \"/signup\",\n                active: this.path === '/signup',\n                children: \"SignUp\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 25\n            }, this), this.path === '/' ? this.isIndex() : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation\",\n        ref: this.wrapper,\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          bg: \"dark\",\n          variant: \"dark\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n              href: \"/\",\n              children: \"TS Blogs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Nav, {\n              children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n                onClick: this.home,\n                active: this.path === `/${this.username}`,\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n                onClick: this.myBlogs,\n                active: this.path === `/${this.username}/myblogs`,\n                children: \"My blogs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n                onClick: this.logout,\n                children: \"Logout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 25\n            }, this), this.path === '/' ? this.isIndex() : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: this.state.show,\n          onHide: this.logout,\n          animation: false,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: \"TS Blogs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: \"Please click Yes to next...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: this.logout,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"dark\",\n              onClick: this.handleYes,\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.render = () => {\n      return this.isLogin();\n    };\n\n    this.wrapper = /*#__PURE__*/createRef();\n    this.state = {\n      show: false,\n      title: ''\n    };\n    const {\n      pathname\n    } = this.props.location;\n    const {\n      username,\n      uuid\n    } = this.props.data.user;\n    const {\n      blogs\n    } = this.props.page;\n    this.blogs = blogs;\n    this.uuid = uuid;\n    this.path = pathname;\n    this.username = username; // console.log(this.props.data.login)\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.data,\n  page: state.page\n});\n\nconst mapDispatchToProps = dispatch => ({\n  reset: () => dispatch(reset()),\n  setIndexPost: data => dispatch(setIndexPost(data)),\n  setCountBlogs: data => dispatch(setCountBlogs(data))\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Navigation));","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-16/client/src/components/Navigation.tsx"],"names":["Component","createRef","Navbar","Nav","Container","Modal","Button","FormControl","Form","withRouter","connect","reset","setIndexPost","setCountBlogs","Api","Navigation","constructor","props","path","username","uuid","blogs","wrapper","logout","setState","show","state","handleYes","history","push","myBlogs","window","location","reload","home","search","e","value","target","title","findData","api","result","error","console","log","isIndex","isLogin","login","data","render","pathname","user","page","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { Component, createRef } from 'react'\nimport { Navbar, Nav, Container, Modal, Button, FormControl, Form } from 'react-bootstrap'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { reset, setIndexPost, setCountBlogs } from '../store/hooks'\nimport Api from '../api/Api'\n\n\ninterface Props {\n    location: any\n    history: any\n    setMyPost: any\n    reset: any\n\n    data: {\n        user: any\n        login: boolean\n    }\n    page: {\n        blogs: any\n        current: number\n    }\n\n    setIndexPost: any\n    setCountBlogs: any\n}\n\ninterface State {\n    show: boolean\n    title: string\n}\n\n\nclass Navigation extends Component<Props | any, State> {\n\n    path: string\n    username: string\n    uuid: string\n    blogs: any\n    wrapper: any\n\n    constructor(props: any) {\n        super(props)\n        this.wrapper = createRef()\n        this.state = {\n            show: false,\n            title: ''\n        }\n\n        const { pathname } = this.props.location\n        const { username, uuid } = this.props.data.user\n        const { blogs } = this.props.page\n\n        this.blogs = blogs\n        this.uuid = uuid\n        this.path = pathname\n        this.username = username\n        // console.log(this.props.data.login)\n    }\n\n    logout = () => {\n        this.setState({ show: !this.state.show })\n    }\n\n    handleYes = () => {\n        this.props.reset()\n        this.setState({ show: false })\n        this.props.history.push('/')\n    }\n\n    myBlogs = () => {\n        this.props.history.push(`/${this.username}/myblogs`)\n        window.location.reload()\n    }\n\n    home = () => {\n        this.props.history.push(`/${this.username}`)\n    }\n\n    search = (e: any) => {\n        const { value } = e.target\n        this.setState({ title: value })\n    }\n\n    findData = async () => {\n        const { title } = this.state\n        try {\n            const api = new Api({ title })\n            const result: any = await api.search()\n            if (result) {\n                this.props.setCountBlogs(result[1])\n                this.props.setIndexPost(result)\n            }\n        } catch (error) {\n            console.log(`${error}`)\n        }\n    }\n\n\n    isIndex = (): JSX.Element => {\n        return (\n            <>\n                <Form className=\"d-flex\">\n                    <FormControl\n                        onChange={this.search}\n                        name=\"title\"\n                        type=\"search\"\n                        placeholder=\"Search\"\n                        className=\"mr-2\"\n                        aria-label=\"Search\"\n                    />\n                    <Button onClick={this.findData} className=\"btnSearch\" variant=\"outline-light\">Search</Button>\n                </Form>\n            </>\n        )\n    }\n\n    isLogin = (): JSX.Element => {\n\n        const { login } = this.props.data\n\n        return login === false ?\n            <div className=\"navigation\">\n                <Navbar bg=\"dark\" variant=\"dark\">\n                    <Container>\n                        <Navbar.Brand href=\"/\">TS Blogs</Navbar.Brand>\n                        <Nav>\n                            <Nav.Link href=\"/login\" active={this.path === '/login'}>Login</Nav.Link>\n                            <Nav.Link href=\"/signup\" active={this.path === '/signup'} >SignUp</Nav.Link>\n                        </Nav>\n                        {\n                            this.path === '/' ? this.isIndex() : null\n                        }\n                    </Container>\n                </Navbar>\n            </div> :\n            <div className=\"navigation\" ref={this.wrapper} >\n\n                <Navbar bg=\"dark\" variant=\"dark\">\n                    <Container>\n                        <Navbar.Brand href=\"/\">TS Blogs</Navbar.Brand>\n                        <Nav>\n                            <Nav.Link onClick={this.home} active={this.path === `/${this.username}`}>Home</Nav.Link>\n                            <Nav.Link onClick={this.myBlogs} active={this.path === `/${this.username}/myblogs`}>My blogs</Nav.Link>\n                            <Nav.Link onClick={this.logout} >Logout</Nav.Link>\n                        </Nav>\n                        {\n                            this.path === '/' ? this.isIndex() : null\n                        }\n                    </Container>\n                </Navbar>\n\n                <Modal show={this.state.show} onHide={this.logout} animation={false} >\n                    <Modal.Header>\n                        <Modal.Title>TS Blogs</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>Please click Yes to next...</Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.logout}>\n                            Close\n                        </Button>\n                        <Button variant=\"dark\" onClick={this.handleYes}>\n                            Yes\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n\n            </div>\n    }\n\n    render = (): JSX.Element => {\n        return this.isLogin()\n    }\n\n}\n\n\nconst mapStateToProps = (state: any) => ({\n    data: state.data,\n    page: state.page\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    reset: () => dispatch(reset()),\n    setIndexPost: (data: any) => dispatch(setIndexPost(data)),\n    setCountBlogs: (data: any) => dispatch(setCountBlogs(data))\n})\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Navigation))"]},"metadata":{},"sourceType":"module"}