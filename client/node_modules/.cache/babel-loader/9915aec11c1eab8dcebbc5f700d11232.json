{"ast":null,"code":"var _jsxFileName = \"/home/linux/Documents/IMIN/AUGUST-16/client/src/components/Pagin.tsx\";\nimport { Component } from \"react\";\nimport { Pagination } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { firstPage, nextPage, previousPage, targetPage } from '../store/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Paginate extends Component {\n  constructor(...args) {\n    super(...args);\n    this.count = Math.ceil(this.props.page.countBlogs / this.props.page.blogs.take);\n    this.currentPage = this.props.page.blogs.currentPage;\n\n    this.btnNumber = () => {\n      const pageNumber = [];\n\n      for (let i = 1; i <= this.count; i++) {\n        pageNumber.push( /*#__PURE__*/_jsxDEV(Pagination.Item, {\n          active: i === this.currentPage,\n          onClick: () => this.props.targetPage(i),\n          children: i\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this));\n      }\n\n      return pageNumber;\n    };\n\n    this.targetButton = num => {\n      this.props.targetPage(num);\n    };\n\n    this.firstButton = () => {\n      this.props.targetPage(1);\n    };\n\n    this.nextButton = () => {\n      this.props.nextPage();\n    };\n\n    this.previousButton = () => {\n      this.props.previousPage();\n    };\n\n    this.lastButton = () => {\n      this.props.targetPage(this.count);\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          size: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(Pagination.First, {\n            disabled: this.currentPage === 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Pagination.Prev, {\n            disabled: this.currentPage === 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), this.btnNumber(), /*#__PURE__*/_jsxDEV(Pagination.Next, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Pagination.Last, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  page: state.page\n});\n\nconst mapDispatchToProps = dispatch => ({\n  firstPage: () => dispatch(firstPage()),\n  nextPage: () => dispatch(nextPage()),\n  previousPage: () => dispatch(previousPage()),\n  targetPage: num => dispatch(targetPage(num))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Paginate);","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-16/client/src/components/Pagin.tsx"],"names":["Component","Pagination","connect","firstPage","nextPage","previousPage","targetPage","Paginate","count","Math","ceil","props","page","countBlogs","blogs","take","currentPage","btnNumber","pageNumber","i","push","targetButton","num","firstButton","nextButton","previousButton","lastButton","render","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { Component } from \"react\"\nimport { Pagination } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { firstPage, nextPage, previousPage, targetPage } from '../store/hooks'\n\n\ninterface Props {\n    page: {\n        blogs: {\n            currentPage: number\n            take: number\n        }\n        countBlogs: number\n    }\n\n    firstPage: any\n    nextPage: any\n    previousPage: any\n    targetPage: any\n}\n\n\nclass Paginate extends Component<Props> {\n\n\n    count: number = Math.ceil(this.props.page.countBlogs / this.props.page.blogs.take)\n    currentPage: number = this.props.page.blogs.currentPage\n\n    btnNumber = () => {\n\n        const pageNumber = []\n        for (let i = 1; i <= this.count; i++) {\n            pageNumber.push(<Pagination.Item key={i} active={i === this.currentPage} onClick={() => this.props.targetPage(i)} >{i}</Pagination.Item>)\n        }\n        return pageNumber\n    }\n\n    targetButton = (num: number) => {\n        this.props.targetPage(num)\n    }\n\n    firstButton = () => {\n        this.props.targetPage(1)\n    }\n\n    nextButton = () => {\n        this.props.nextPage()\n    }\n\n    previousButton = () => {\n        this.props.previousPage()\n    }\n\n    lastButton = () => {\n        this.props.targetPage(this.count)\n    }\n\n    render = () => {\n\n        return (\n            <div className=\"pagination\">\n                <Pagination size=\"sm\">\n                    <Pagination.First disabled={this.currentPage === 1} />\n                    <Pagination.Prev disabled={this.currentPage === 1} />\n                    {\n                        this.btnNumber()\n                    }\n                    <Pagination.Next /* disabled={currentPage === this.props.count} */ />\n                    <Pagination.Last /* disabled={currentPage === this.props.count} */ />\n                </Pagination>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: any) => ({\n    page: state.page\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    firstPage: () => dispatch(firstPage()),\n    nextPage: () => dispatch(nextPage()),\n    previousPage: () => dispatch(previousPage()),\n    targetPage: (num: number) => dispatch(targetPage(num))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Paginate)"]},"metadata":{},"sourceType":"module"}