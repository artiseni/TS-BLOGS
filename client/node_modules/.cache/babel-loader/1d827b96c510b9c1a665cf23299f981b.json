{"ast":null,"code":"var _jsxFileName = \"/home/linux/Documents/IMIN/AUGUST-16/client/src/components/Pagin.tsx\";\nimport { Component } from \"react\";\nimport { Pagination } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { firstPage, nextPage, previousPage, targetPage, setLoading, setIndexPost } from '../store/hooks';\nimport Api from '../api/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Paginate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.index = async () => {\n      const api = new Api(this.props.page.blogs);\n      const data = await api.index();\n      this.props.setLoading();\n      this.props.setIndexPost(data);\n    };\n\n    this.userBlogs = async () => {\n      const api = new Api(this.props.page.blogs);\n    };\n\n    this.btnNumber = () => {\n      const pageNumber = [];\n\n      for (let i = 1; i <= this.props.page.ceil; i++) {\n        pageNumber.push( /*#__PURE__*/_jsxDEV(Pagination.Item, {\n          active: i === this.props.page.blogs.currentPage,\n          onClick: async () => await this.targetButton(i),\n          children: i\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this));\n      }\n\n      return pageNumber;\n    };\n\n    this.targetButton = async num => {\n      try {\n        const promise = new Promise(res => {\n          res(this.props.targetPage(num));\n        });\n        const result = await promise;\n\n        if (result) {\n          this.index();\n        }\n      } catch (error) {\n        console.log(`${error}`);\n      }\n    };\n\n    this.firstButton = async () => {\n      try {\n        const promise = new Promise(res => {\n          res(this.props.targetPage(1));\n        });\n        const result = await promise;\n\n        if (result) {\n          this.index();\n        }\n      } catch (error) {\n        console.log(`${error}`);\n      }\n    };\n\n    this.nextButton = async () => {\n      try {\n        const promise = new Promise(res => {\n          res(this.props.nextPage());\n        });\n        const result = await promise;\n\n        if (result) {\n          this.index();\n        }\n      } catch (error) {\n        console.log(`${error}`);\n      }\n    };\n\n    this.previousButton = async () => {\n      try {\n        const promise = new Promise(res => {\n          res(this.props.previousPage());\n        });\n        const result = await promise;\n\n        if (result) {\n          this.index();\n        }\n      } catch (error) {\n        console.log(`${error}`);\n      }\n    };\n\n    this.lastButton = async () => {\n      try {\n        const promise = new Promise(res => {\n          res(this.props.targetPage(this.props.page.ceil));\n        });\n        const result = await promise;\n\n        if (result) {\n          this.index();\n        }\n      } catch (error) {\n        console.log(`${error}`);\n      }\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          size: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(Pagination.First, {\n            onClick: this.firstButton,\n            disabled: this.props.page.blogs.currentPage === 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Pagination.Prev, {\n            onClick: this.previousButton,\n            disabled: this.props.page.blogs.currentPage === 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 21\n          }, this), this.btnNumber(), /*#__PURE__*/_jsxDEV(Pagination.Next, {\n            onClick: this.nextButton,\n            disabled: this.props.page.blogs.currentPage === this.props.page.ceil\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Pagination.Last, {\n            onClick: this.lastButton,\n            disabled: this.props.page.blogs.currentPage === this.props.page.ceil\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this);\n    };\n\n    console.log(props.type);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  page: state.page\n});\n\nconst mapDispatchToProps = dispatch => ({\n  firstPage: () => dispatch(firstPage()),\n  nextPage: () => dispatch(nextPage()),\n  setLoading: () => dispatch(setLoading()),\n  setIndexPost: data => dispatch(setIndexPost(data)),\n  previousPage: () => dispatch(previousPage()),\n  targetPage: num => dispatch(targetPage(num))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Paginate);","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-16/client/src/components/Pagin.tsx"],"names":["Component","Pagination","connect","firstPage","nextPage","previousPage","targetPage","setLoading","setIndexPost","Api","Paginate","constructor","props","index","api","page","blogs","data","userBlogs","btnNumber","pageNumber","i","ceil","push","currentPage","targetButton","num","promise","Promise","res","result","error","console","log","firstButton","nextButton","previousButton","lastButton","render","type","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,YAA9B,EAA4CC,UAA5C,EAAwDC,UAAxD,EAAoEC,YAApE,QAAwF,gBAAxF;AACA,OAAOC,GAAP,MAAgB,YAAhB;;;AAyBA,MAAMC,QAAN,SAAuBV,SAAvB,CAAwC;AAGpCW,EAAAA,WAAW,CAACC,KAAD,EAAa;AACpB,UAAMA,KAAN;;AADoB,SAOxBC,KAPwB,GAOhB,YAA2B;AAC/B,YAAMC,GAAG,GAAG,IAAIL,GAAJ,CAAQ,KAAKG,KAAL,CAAWG,IAAX,CAAgBC,KAAxB,CAAZ;AACA,YAAMC,IAAI,GAAG,MAAMH,GAAG,CAACD,KAAJ,EAAnB;AACA,WAAKD,KAAL,CAAWL,UAAX;AACA,WAAKK,KAAL,CAAWJ,YAAX,CAAwBS,IAAxB;AACH,KAZuB;;AAAA,SAexBC,SAfwB,GAeZ,YAA2B;AACnC,YAAMJ,GAAG,GAAG,IAAIL,GAAJ,CAAQ,KAAKG,KAAL,CAAWG,IAAX,CAAgBC,KAAxB,CAAZ;AACH,KAjBuB;;AAAA,SAoBxBG,SApBwB,GAoBZ,MAAM;AAEd,YAAMC,UAAU,GAAG,EAAnB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,KAAKT,KAAL,CAAWG,IAAX,CAAgBO,IAArC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5CD,QAAAA,UAAU,CAACG,IAAX,eAAgB,QAAC,UAAD,CAAY,IAAZ;AAAyB,UAAA,MAAM,EAAEF,CAAC,KAAK,KAAKT,KAAL,CAAWG,IAAX,CAAgBC,KAAhB,CAAsBQ,WAA7D;AAA0E,UAAA,OAAO,EAAE,YAAY,MAAM,KAAKC,YAAL,CAAkBJ,CAAlB,CAArG;AAAA,oBAA6HA;AAA7H,WAAsBA,CAAtB;AAAA;AAAA;AAAA;AAAA,gBAAhB;AACH;;AACD,aAAOD,UAAP;AACH,KA3BuB;;AAAA,SA6BxBK,YA7BwB,GA6BT,MAAOC,GAAP,IAAuB;AAClC,UAAI;AAEA,cAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAYC,GAAG,IAAI;AAC/BA,UAAAA,GAAG,CAAC,KAAKjB,KAAL,CAAWN,UAAX,CAAsBoB,GAAtB,CAAD,CAAH;AACH,SAFe,CAAhB;AAGA,cAAMI,MAAM,GAAG,MAAMH,OAArB;;AACA,YAAIG,MAAJ,EAAY;AACR,eAAKjB,KAAL;AACH;AAEJ,OAVD,CAUE,OAAOkB,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAa,GAAEF,KAAM,EAArB;AACH;AACJ,KA3CuB;;AAAA,SA6CxBG,WA7CwB,GA6CV,YAAY;AAEtB,UAAI;AAEA,cAAMP,OAAO,GAAG,IAAIC,OAAJ,CAAYC,GAAG,IAAI;AAC/BA,UAAAA,GAAG,CAAC,KAAKjB,KAAL,CAAWN,UAAX,CAAsB,CAAtB,CAAD,CAAH;AACH,SAFe,CAAhB;AAGA,cAAMwB,MAAM,GAAG,MAAMH,OAArB;;AACA,YAAIG,MAAJ,EAAY;AACR,eAAKjB,KAAL;AACH;AAEJ,OAVD,CAUE,OAAOkB,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAa,GAAEF,KAAM,EAArB;AACH;AAEJ,KA7DuB;;AAAA,SAgExBI,UAhEwB,GAgEX,YAAY;AAErB,UAAI;AAEA,cAAMR,OAAO,GAAG,IAAIC,OAAJ,CAAYC,GAAG,IAAI;AAC/BA,UAAAA,GAAG,CAAC,KAAKjB,KAAL,CAAWR,QAAX,EAAD,CAAH;AACH,SAFe,CAAhB;AAGA,cAAM0B,MAAM,GAAG,MAAMH,OAArB;;AACA,YAAIG,MAAJ,EAAY;AACR,eAAKjB,KAAL;AACH;AAEJ,OAVD,CAUE,OAAOkB,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAa,GAAEF,KAAM,EAArB;AACH;AAEJ,KAhFuB;;AAAA,SAkFxBK,cAlFwB,GAkFP,YAAY;AACzB,UAAI;AAEA,cAAMT,OAAO,GAAG,IAAIC,OAAJ,CAAYC,GAAG,IAAI;AAC/BA,UAAAA,GAAG,CAAC,KAAKjB,KAAL,CAAWP,YAAX,EAAD,CAAH;AACH,SAFe,CAAhB;AAGA,cAAMyB,MAAM,GAAG,MAAMH,OAArB;;AACA,YAAIG,MAAJ,EAAY;AACR,eAAKjB,KAAL;AACH;AAEJ,OAVD,CAUE,OAAOkB,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAa,GAAEF,KAAM,EAArB;AACH;AACJ,KAhGuB;;AAAA,SAkGxBM,UAlGwB,GAkGX,YAAY;AAErB,UAAI;AAEA,cAAMV,OAAO,GAAG,IAAIC,OAAJ,CAAYC,GAAG,IAAI;AAC/BA,UAAAA,GAAG,CAAC,KAAKjB,KAAL,CAAWN,UAAX,CAAsB,KAAKM,KAAL,CAAWG,IAAX,CAAgBO,IAAtC,CAAD,CAAH;AACH,SAFe,CAAhB;AAGA,cAAMQ,MAAM,GAAG,MAAMH,OAArB;;AACA,YAAIG,MAAJ,EAAY;AACR,eAAKjB,KAAL;AACH;AAEJ,OAVD,CAUE,OAAOkB,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAa,GAAEF,KAAM,EAArB;AACH;AAGJ,KAnHuB;;AAAA,SAqHxBO,MArHwB,GAqHf,MAAM;AAEX,0BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC,IAAjB;AAAA,kCACI,QAAC,UAAD,CAAY,KAAZ;AAAkB,YAAA,OAAO,EAAE,KAAKJ,WAAhC;AAA6C,YAAA,QAAQ,EAAE,KAAKtB,KAAL,CAAWG,IAAX,CAAgBC,KAAhB,CAAsBQ,WAAtB,KAAsC;AAA7F;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,UAAD,CAAY,IAAZ;AAAiB,YAAA,OAAO,EAAE,KAAKY,cAA/B;AAA+C,YAAA,QAAQ,EAAE,KAAKxB,KAAL,CAAWG,IAAX,CAAgBC,KAAhB,CAAsBQ,WAAtB,KAAsC;AAA/F;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAIQ,KAAKL,SAAL,EAJR,eAMI,QAAC,UAAD,CAAY,IAAZ;AAAiB,YAAA,OAAO,EAAE,KAAKgB,UAA/B;AAA2C,YAAA,QAAQ,EAAE,KAAKvB,KAAL,CAAWG,IAAX,CAAgBC,KAAhB,CAAsBQ,WAAtB,KAAsC,KAAKZ,KAAL,CAAWG,IAAX,CAAgBO;AAA3G;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI,QAAC,UAAD,CAAY,IAAZ;AAAiB,YAAA,OAAO,EAAE,KAAKe,UAA/B;AAA2C,YAAA,QAAQ,EAAE,KAAKzB,KAAL,CAAWG,IAAX,CAAgBC,KAAhB,CAAsBQ,WAAtB,KAAsC,KAAKZ,KAAL,CAAWG,IAAX,CAAgBO;AAA3G;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAaH,KApIuB;;AAGpBU,IAAAA,OAAO,CAACC,GAAR,CAAYrB,KAAK,CAAC2B,IAAlB;AACH;;AAPmC;;AA0IxC,MAAMC,eAAe,GAAIC,KAAD,KAAiB;AACrC1B,EAAAA,IAAI,EAAE0B,KAAK,CAAC1B;AADyB,CAAjB,CAAxB;;AAIA,MAAM2B,kBAAkB,GAAIC,QAAD,KAAoB;AAC3CxC,EAAAA,SAAS,EAAE,MAAMwC,QAAQ,CAACxC,SAAS,EAAV,CADkB;AAE3CC,EAAAA,QAAQ,EAAE,MAAMuC,QAAQ,CAACvC,QAAQ,EAAT,CAFmB;AAG3CG,EAAAA,UAAU,EAAE,MAAMoC,QAAQ,CAACpC,UAAU,EAAX,CAHiB;AAI3CC,EAAAA,YAAY,EAAGS,IAAD,IAAe0B,QAAQ,CAACnC,YAAY,CAACS,IAAD,CAAb,CAJM;AAK3CZ,EAAAA,YAAY,EAAE,MAAMsC,QAAQ,CAACtC,YAAY,EAAb,CALe;AAM3CC,EAAAA,UAAU,EAAGoB,GAAD,IAAiBiB,QAAQ,CAACrC,UAAU,CAACoB,GAAD,CAAX;AANM,CAApB,CAA3B;;AASA,eAAexB,OAAO,CAACsC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChC,QAA7C,CAAf","sourcesContent":["import { Component } from \"react\"\nimport { Pagination } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { firstPage, nextPage, previousPage, targetPage, setLoading, setIndexPost } from '../store/hooks'\nimport Api from '../api/Api'\n\n\ninterface Props {\n    page: {\n        blogs: {\n            currentPage: number\n            take: number\n        }\n        countBlogs: number\n        ceil: number\n        current: number\n    }\n\n    type: string\n    firstPage: any\n    nextPage: any\n    previousPage: any\n    targetPage: any\n    setLoading: any\n    setIndexPost: any\n\n}\n\n\nclass Paginate extends Component<Props> {\n\n\n    constructor(props: any) {\n        super(props)\n\n        console.log(props.type)\n    }\n\n\n    index = async (): Promise<void> => {\n        const api = new Api(this.props.page.blogs)\n        const data = await api.index()\n        this.props.setLoading()\n        this.props.setIndexPost(data)\n    }\n\n\n    userBlogs = async (): Promise<void> => {\n        const api = new Api(this.props.page.blogs)\n    }\n\n\n    btnNumber = () => {\n\n        const pageNumber = []\n        for (let i = 1; i <= this.props.page.ceil; i++) {\n            pageNumber.push(<Pagination.Item key={i} active={i === this.props.page.blogs.currentPage} onClick={async () => await this.targetButton(i)} >{i}</Pagination.Item>)\n        }\n        return pageNumber\n    }\n\n    targetButton = async (num: number) => {\n        try {\n\n            const promise = new Promise(res => {\n                res(this.props.targetPage(num))\n            })\n            const result = await promise\n            if (result) {\n                this.index()\n            }\n\n        } catch (error) {\n            console.log(`${error}`)\n        }\n    }\n\n    firstButton = async () => {\n\n        try {\n\n            const promise = new Promise(res => {\n                res(this.props.targetPage(1))\n            })\n            const result = await promise\n            if (result) {\n                this.index()\n            }\n\n        } catch (error) {\n            console.log(`${error}`)\n        }\n\n    }\n\n\n    nextButton = async () => {\n\n        try {\n\n            const promise = new Promise(res => {\n                res(this.props.nextPage())\n            })\n            const result = await promise\n            if (result) {\n                this.index()\n            }\n\n        } catch (error) {\n            console.log(`${error}`)\n        }\n\n    }\n\n    previousButton = async () => {\n        try {\n\n            const promise = new Promise(res => {\n                res(this.props.previousPage())\n            })\n            const result = await promise\n            if (result) {\n                this.index()\n            }\n\n        } catch (error) {\n            console.log(`${error}`)\n        }\n    }\n\n    lastButton = async () => {\n\n        try {\n\n            const promise = new Promise(res => {\n                res(this.props.targetPage(this.props.page.ceil))\n            })\n            const result = await promise\n            if (result) {\n                this.index()\n            }\n\n        } catch (error) {\n            console.log(`${error}`)\n        }\n\n\n    }\n\n    render = () => {\n\n        return (\n            <div className=\"pagination\">\n                <Pagination size=\"sm\">\n                    <Pagination.First onClick={this.firstButton} disabled={this.props.page.blogs.currentPage === 1} />\n                    <Pagination.Prev onClick={this.previousButton} disabled={this.props.page.blogs.currentPage === 1} />\n                    {\n                        this.btnNumber()\n                    }\n                    <Pagination.Next onClick={this.nextButton} disabled={this.props.page.blogs.currentPage === this.props.page.ceil} />\n                    <Pagination.Last onClick={this.lastButton} disabled={this.props.page.blogs.currentPage === this.props.page.ceil} />\n                </Pagination>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: any) => ({\n    page: state.page\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    firstPage: () => dispatch(firstPage()),\n    nextPage: () => dispatch(nextPage()),\n    setLoading: () => dispatch(setLoading()),\n    setIndexPost: (data: any) => dispatch(setIndexPost(data)),\n    previousPage: () => dispatch(previousPage()),\n    targetPage: (num: number) => dispatch(targetPage(num))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Paginate)"]},"metadata":{},"sourceType":"module"}