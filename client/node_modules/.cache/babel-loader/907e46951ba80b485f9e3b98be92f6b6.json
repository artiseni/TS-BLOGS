{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const dataUser = createSlice({\n  name: 'blogs',\n  initialState: {\n    token_keys: {},\n    user: {},\n    display: true,\n    content: [],\n    button_number: 0,\n    str: '',\n    countBlogs: 0,\n    ceil: 0,\n    current: 1,\n    loading: false,\n    login: false,\n    edit: false,\n    blogs: {\n      currentPage: 1,\n      take: 4\n    },\n    edit_post: {\n      username: '',\n      updatedAt: '',\n      title: '',\n      content: ''\n    },\n    index_post: [[], 0],\n    myPost: [[], 0]\n  },\n  reducers: {\n    setEdit: state => {\n      state.edit = true;\n    },\n    setLogin: state => {\n      state.login = true;\n    },\n    setBlogs: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.blogs = payload;\n    },\n    setCeil: state => {\n      state.ceil = Math.ceil(state.countBlogs / state.blogs.take);\n    },\n    setCountBlogs: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.countBlogs = payload;\n    },\n    setLoading: state => {\n      state.loading = true;\n    },\n    setString: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.str = payload;\n    },\n    nextButtonNumber: state => {\n      state.button_number += 1;\n    },\n    changeButtonNumber: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.button_number = payload;\n    },\n    setContent: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.content = payload;\n    },\n    firstPage: state => {\n      state.current = 1;\n      state.blogs = {\n        currentPage: 1,\n        take: 4\n      };\n    },\n    targetPage: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.current = payload;\n      state.blogs = {\n        currentPage: payload,\n        take: 4\n      };\n    },\n    nextPage: state => {\n      state.current = state.current + 1;\n      state.blogs = {\n        currentPage: state.blogs.currentPage + 1,\n        take: 4\n      };\n    },\n    previousPage: state => {\n      state.current = state.current - 1;\n      state.blogs = {\n        currentPage: state.blogs.currentPage - 1,\n        take: 4\n      };\n    },\n    setDisplay: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.display = payload;\n    },\n    setIndexPost: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.index_post = payload;\n    },\n    setMyPost: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.myPost = payload;\n    },\n    setEditPost: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.edit_post = payload;\n    },\n    setDataUser: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.user = payload;\n    },\n    setTokenKeys: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.token_keys = payload;\n    },\n    reset: state => {\n      state.login = false;\n      state.button_number = 0;\n      state.user = {};\n      state.token_keys = {};\n      state.myPost = [[], 0];\n    }\n  }\n});\nexport const {\n  setDataUser,\n  reset,\n  setIndexPost,\n  setMyPost,\n  setTokenKeys,\n  setEditPost,\n  setDisplay,\n  nextPage,\n  previousPage,\n  firstPage,\n  targetPage,\n  setContent,\n  nextButtonNumber,\n  changeButtonNumber,\n  setString,\n  setLoading,\n  setCountBlogs,\n  setCeil,\n  setBlogs,\n  setLogin,\n  setEdit\n} = dataUser.actions;\nexport default dataUser.reducer;","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-16/client/src/store/hooks.ts"],"names":["createSlice","dataUser","name","initialState","token_keys","user","display","content","button_number","str","countBlogs","ceil","current","loading","login","edit","blogs","currentPage","take","edit_post","username","updatedAt","title","index_post","myPost","reducers","setEdit","state","setLogin","setBlogs","action","payload","setCeil","Math","setCountBlogs","setLoading","setString","nextButtonNumber","changeButtonNumber","setContent","firstPage","targetPage","nextPage","previousPage","setDisplay","setIndexPost","setMyPost","setEditPost","setDataUser","setTokenKeys","reset","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\n\nexport const dataUser = createSlice({\n\n    name: 'blogs',\n    initialState: {\n        token_keys: {} as object,\n        user: {} as object,\n        display: true as boolean,\n        content: [],\n        button_number: 0 as number,\n        str: '' as string,\n        countBlogs: 0 as number,\n        ceil: 0,\n        current: 1,\n        loading: false,\n        login: false,\n        edit: false,\n\n        blogs: {\n            currentPage: 1 as number,\n            take: 4 as number\n        } as any,\n\n        edit_post: {\n            username: '' as string,\n            updatedAt: '' as string,\n            title: '' as string,\n            content: '' as string\n        } as object,\n\n        index_post: [[], 0] as any[],\n        myPost: [[], 0] as any[]\n    },\n\n    reducers: {\n\n        setEdit: state => {\n            state.edit = true\n        },\n\n        setLogin: state => {\n            state.login = true\n        },\n\n        setBlogs: (state, action) => {\n            const { payload } = action\n            state.blogs = payload\n        },\n\n        setCeil: state => {\n            state.ceil = Math.ceil(state.countBlogs / state.blogs.take)\n        },\n\n        setCountBlogs: (state, action) => {\n            const { payload } = action\n            state.countBlogs = payload\n        },\n\n        setLoading: state => {\n            state.loading = true\n        },\n\n        setString: (state, action) => {\n            const { payload } = action\n            state.str = payload\n        },\n\n        nextButtonNumber: state => {\n            state.button_number += 1\n        },\n\n        changeButtonNumber: (state, action) => {\n            const { payload } = action\n            state.button_number = payload\n        },\n\n        setContent: (state, action) => {\n            const { payload } = action\n            state.content = payload\n        },\n\n        firstPage: state => {\n            state.current = 1\n            state.blogs = { currentPage: 1, take: 4 }\n        },\n\n        targetPage: (state, action) => {\n            const { payload } = action\n            state.current = payload\n            state.blogs = { currentPage: payload, take: 4 }\n        },\n\n        nextPage: state => {\n            state.current = state.current + 1\n            state.blogs = {\n                currentPage: state.blogs.currentPage + 1,\n                take: 4\n            }\n        },\n\n        previousPage: state => {\n            state.current = state.current - 1\n            state.blogs = {\n                currentPage: state.blogs.currentPage - 1,\n                take: 4\n            }\n        },\n\n        setDisplay: (state, action) => {\n            const { payload } = action\n            state.display = payload\n        },\n\n        setIndexPost: (state, action) => {\n            const { payload } = action\n            state.index_post = payload\n        },\n\n        setMyPost: (state, action) => {\n            const { payload } = action\n            state.myPost = payload\n        },\n\n        setEditPost: (state, action) => {\n            const { payload } = action\n            state.edit_post = payload\n        },\n\n        setDataUser: (state, action) => {\n            const { payload } = action\n            state.user = payload\n        },\n\n        setTokenKeys: (state, action) => {\n            const { payload } = action\n            state.token_keys = payload\n        },\n\n        reset: state => {\n            state.login = false\n            state.button_number = 0\n            state.user = {}\n            state.token_keys = {}\n            state.myPost = [[], 0]\n        }\n    }\n})\n\nexport const {\n    setDataUser, reset, setIndexPost,\n    setMyPost, setTokenKeys, setEditPost,\n    setDisplay, nextPage, previousPage,\n    firstPage, targetPage, setContent,\n    nextButtonNumber, changeButtonNumber,\n    setString, setLoading, setCountBlogs,\n    setCeil, setBlogs, setLogin, setEdit\n} = dataUser.actions\n\nexport default dataUser.reducer"]},"metadata":{},"sourceType":"module"}