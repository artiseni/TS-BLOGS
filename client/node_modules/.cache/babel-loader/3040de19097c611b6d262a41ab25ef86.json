{"ast":null,"code":"var _jsxFileName = \"/home/linux/Documents/IMIN/AUGUST-16/client/src/components/Pagin.tsx\";\nimport { Component } from \"react\";\nimport { Pagination } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { firstPage, nextPage, previousPage, targetPage } from '../store/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Paginate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.btnNumber = () => {\n      const pageNumber = [];\n\n      for (let i = 1; i <= Math.ceil(this.props.page.countBlogs / this.props.page.blogs.take); i++) {\n        pageNumber.push( /*#__PURE__*/_jsxDEV(Pagination.Item, {\n          active: i === this.props.page.blogs.currentPage,\n          onClick: () => this.props.targetPage(i),\n          children: i\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this));\n      }\n\n      return pageNumber;\n    };\n\n    this.targetButton = num => {\n      this.props.targetPage(num);\n    };\n\n    this.firstButton = () => {\n      this.props.targetPage(1);\n    };\n\n    this.nextButton = () => {\n      this.props.nextPage();\n      console.log(this.state.blogs);\n    };\n\n    this.previousButton = () => {\n      this.props.previousPage();\n    };\n\n    this.lastButton = () => {\n      this.props.targetPage(Math.ceil(this.props.page.countBlogs / this.props.page.blogs.take));\n    };\n\n    this.updateData = async () => {\n      console.log();\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          size: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(Pagination.First, {\n            onClick: this.firstButton,\n            disabled: this.props.page.blogs.currentPage === 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Pagination.Prev, {\n            onClick: this.previousButton,\n            disabled: this.props.page.blogs.currentPage === 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this), this.btnNumber(), /*#__PURE__*/_jsxDEV(Pagination.Next, {\n            onClick: this.nextButton,\n            disabled: this.props.page.blogs.currentPage === this.props.page.ceil\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Pagination.Last, {\n            onClick: this.lastButton,\n            disabled: this.props.page.blogs.currentPage === this.props.page.ceil\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.state = {\n      blogs: this.props.page.blogs\n    };\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  page: state.page\n});\n\nconst mapDispatchToProps = dispatch => ({\n  firstPage: () => dispatch(firstPage()),\n  nextPage: () => dispatch(nextPage()),\n  previousPage: () => dispatch(previousPage()),\n  targetPage: num => dispatch(targetPage(num))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Paginate);","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-16/client/src/components/Pagin.tsx"],"names":["Component","Pagination","connect","firstPage","nextPage","previousPage","targetPage","Paginate","constructor","props","btnNumber","pageNumber","i","Math","ceil","page","countBlogs","blogs","take","push","currentPage","targetButton","num","firstButton","nextButton","console","log","state","previousButton","lastButton","updateData","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,YAA9B,EAA4CC,UAA5C,QAA8D,gBAA9D;;;AA0BA,MAAMC,QAAN,SAAuBP,SAAvB,CAA+C;AAG3CQ,EAAAA,WAAW,CAACC,KAAD,EAAa;AACpB,UAAMA,KAAN;;AADoB,SAOxBC,SAPwB,GAOZ,MAAM;AAEd,YAAMC,UAAU,GAAG,EAAnB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAU,KAAKL,KAAL,CAAWM,IAAX,CAAgBC,UAAhB,GAA6B,KAAKP,KAAL,CAAWM,IAAX,CAAgBE,KAAhB,CAAsBC,IAA7D,CAArB,EAAyFN,CAAC,EAA1F,EAA8F;AAC1FD,QAAAA,UAAU,CAACQ,IAAX,eAAgB,QAAC,UAAD,CAAY,IAAZ;AAAyB,UAAA,MAAM,EAAEP,CAAC,KAAK,KAAKH,KAAL,CAAWM,IAAX,CAAgBE,KAAhB,CAAsBG,WAA7D;AAA0E,UAAA,OAAO,EAAE,MAAM,KAAKX,KAAL,CAAWH,UAAX,CAAsBM,CAAtB,CAAzF;AAAA,oBAAqHA;AAArH,WAAsBA,CAAtB;AAAA;AAAA;AAAA;AAAA,gBAAhB;AACH;;AACD,aAAOD,UAAP;AACH,KAduB;;AAAA,SAgBxBU,YAhBwB,GAgBRC,GAAD,IAAiB;AAC5B,WAAKb,KAAL,CAAWH,UAAX,CAAsBgB,GAAtB;AACH,KAlBuB;;AAAA,SAoBxBC,WApBwB,GAoBV,MAAM;AAChB,WAAKd,KAAL,CAAWH,UAAX,CAAsB,CAAtB;AACH,KAtBuB;;AAAA,SAwBxBkB,UAxBwB,GAwBX,MAAM;AACf,WAAKf,KAAL,CAAWL,QAAX;AACAqB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWV,KAAvB;AACH,KA3BuB;;AAAA,SA6BxBW,cA7BwB,GA6BP,MAAM;AACnB,WAAKnB,KAAL,CAAWJ,YAAX;AACH,KA/BuB;;AAAA,SAiCxBwB,UAjCwB,GAiCX,MAAM;AACf,WAAKpB,KAAL,CAAWH,UAAX,CAAsBO,IAAI,CAACC,IAAL,CAAU,KAAKL,KAAL,CAAWM,IAAX,CAAgBC,UAAhB,GAA6B,KAAKP,KAAL,CAAWM,IAAX,CAAgBE,KAAhB,CAAsBC,IAA7D,CAAtB;AACH,KAnCuB;;AAAA,SAqCxBY,UArCwB,GAqCX,YAA0B;AACnCL,MAAAA,OAAO,CAACC,GAAR;AACH,KAvCuB;;AAAA,SAyCxBK,MAzCwB,GAyCf,MAAM;AAEX,0BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC,IAAjB;AAAA,kCACI,QAAC,UAAD,CAAY,KAAZ;AAAkB,YAAA,OAAO,EAAE,KAAKR,WAAhC;AAA6C,YAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWM,IAAX,CAAgBE,KAAhB,CAAsBG,WAAtB,KAAsC;AAA7F;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,UAAD,CAAY,IAAZ;AAAiB,YAAA,OAAO,EAAE,KAAKQ,cAA/B;AAA+C,YAAA,QAAQ,EAAE,KAAKnB,KAAL,CAAWM,IAAX,CAAgBE,KAAhB,CAAsBG,WAAtB,KAAsC;AAA/F;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAIQ,KAAKV,SAAL,EAJR,eAMI,QAAC,UAAD,CAAY,IAAZ;AAAiB,YAAA,OAAO,EAAE,KAAKc,UAA/B;AAA2C,YAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWM,IAAX,CAAgBE,KAAhB,CAAsBG,WAAtB,KAAsC,KAAKX,KAAL,CAAWM,IAAX,CAAgBD;AAA3G;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI,QAAC,UAAD,CAAY,IAAZ;AAAiB,YAAA,OAAO,EAAE,KAAKe,UAA/B;AAA2C,YAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWM,IAAX,CAAgBE,KAAhB,CAAsBG,WAAtB,KAAsC,KAAKX,KAAL,CAAWM,IAAX,CAAgBD;AAA3G;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAaH,KAxDuB;;AAEpB,SAAKa,KAAL,GAAa;AACTV,MAAAA,KAAK,EAAE,KAAKR,KAAL,CAAWM,IAAX,CAAgBE;AADd,KAAb;AAGH;;AAR0C;;AA8D/C,MAAMe,eAAe,GAAIL,KAAD,KAAiB;AACrCZ,EAAAA,IAAI,EAAEY,KAAK,CAACZ;AADyB,CAAjB,CAAxB;;AAIA,MAAMkB,kBAAkB,GAAIC,QAAD,KAAoB;AAC3C/B,EAAAA,SAAS,EAAE,MAAM+B,QAAQ,CAAC/B,SAAS,EAAV,CADkB;AAE3CC,EAAAA,QAAQ,EAAE,MAAM8B,QAAQ,CAAC9B,QAAQ,EAAT,CAFmB;AAG3CC,EAAAA,YAAY,EAAE,MAAM6B,QAAQ,CAAC7B,YAAY,EAAb,CAHe;AAI3CC,EAAAA,UAAU,EAAGgB,GAAD,IAAiBY,QAAQ,CAAC5B,UAAU,CAACgB,GAAD,CAAX;AAJM,CAApB,CAA3B;;AAOA,eAAepB,OAAO,CAAC8B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6C1B,QAA7C,CAAf","sourcesContent":["import { Component } from \"react\"\nimport { Pagination } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { firstPage, nextPage, previousPage, targetPage } from '../store/hooks'\nimport Api from '../api/Api'\n\n\ninterface Props {\n    page: {\n        blogs: {\n            currentPage: number\n            take: number\n        }\n        countBlogs: number\n        ceil: number\n    }\n\n    firstPage: any\n    nextPage: any\n    previousPage: any\n    targetPage: any\n\n}\n\ninterface State {\n    blogs: any\n}\n\n\nclass Paginate extends Component<Props, State> {\n\n\n    constructor(props: any) {\n        super(props)\n        this.state = {\n            blogs: this.props.page.blogs\n        }\n    }\n\n    btnNumber = () => {\n\n        const pageNumber = []\n        for (let i = 1; i <= Math.ceil(this.props.page.countBlogs / this.props.page.blogs.take); i++) {\n            pageNumber.push(<Pagination.Item key={i} active={i === this.props.page.blogs.currentPage} onClick={() => this.props.targetPage(i)} >{i}</Pagination.Item>)\n        }\n        return pageNumber\n    }\n\n    targetButton = (num: number) => {\n        this.props.targetPage(num)\n    }\n\n    firstButton = () => {\n        this.props.targetPage(1)\n    }\n\n    nextButton = () => {\n        this.props.nextPage()\n        console.log(this.state.blogs)\n    }\n\n    previousButton = () => {\n        this.props.previousPage()\n    }\n\n    lastButton = () => {\n        this.props.targetPage(Math.ceil(this.props.page.countBlogs / this.props.page.blogs.take))\n    }\n\n    updateData = async (): Promise<any> => {\n        console.log()\n    }\n\n    render = () => {\n\n        return (\n            <div className=\"pagination\">\n                <Pagination size=\"sm\">\n                    <Pagination.First onClick={this.firstButton} disabled={this.props.page.blogs.currentPage === 1} />\n                    <Pagination.Prev onClick={this.previousButton} disabled={this.props.page.blogs.currentPage === 1} />\n                    {\n                        this.btnNumber()\n                    }\n                    <Pagination.Next onClick={this.nextButton} disabled={this.props.page.blogs.currentPage === this.props.page.ceil} />\n                    <Pagination.Last onClick={this.lastButton} disabled={this.props.page.blogs.currentPage === this.props.page.ceil} />\n                </Pagination>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: any) => ({\n    page: state.page\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    firstPage: () => dispatch(firstPage()),\n    nextPage: () => dispatch(nextPage()),\n    previousPage: () => dispatch(previousPage()),\n    targetPage: (num: number) => dispatch(targetPage(num))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Paginate)"]},"metadata":{},"sourceType":"module"}