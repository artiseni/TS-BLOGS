{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const dataUser = createSlice({\n  name: 'blogs',\n  initialState: {\n    token_keys: {},\n    user: {},\n    display: true,\n    page: {\n      currentPage: 1,\n      skip: 0,\n      take: 4,\n      first: true,\n      active: true,\n      last: false\n    },\n    edit_post: {\n      infouser: {\n        username: ''\n      },\n      updatedAt: '',\n      title: '',\n      content: ''\n    },\n    index_post: [],\n    myPost: [[], 0]\n  },\n  reducers: {\n    fistPage: state => {\n      state.page.currentPage = 0;\n      state.page.skip = state.page.currentPage * 4 - 4;\n    },\n    lastPage: state => {},\n    nextPage: state => {\n      state.page.currentPage += 1;\n      state.page.skip = state.page.currentPage * 4 - 4;\n    },\n    previousPage: state => {\n      state.page.currentPage -= 1;\n      state.page.skip = state.page.currentPage * 4 - 4;\n    },\n    setDisplay: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.display = payload;\n    },\n    setIndexPost: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.index_post = payload;\n    },\n    setMyPost: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.myPost = payload;\n    },\n    setEditPost: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.edit_post = payload;\n    },\n    setDataUser: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.user = payload;\n    },\n    setTokenKeys: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.token_keys = payload;\n    },\n    reset: state => {\n      state.user = {};\n      state.token_keys = {};\n      state.myPost = [[], 0];\n    }\n  }\n});\nexport const {\n  setDataUser,\n  reset,\n  setIndexPost,\n  setMyPost,\n  setTokenKeys,\n  setEditPost,\n  setDisplay,\n  nextPage,\n  previousPage,\n  fistPage,\n  lastPage\n} = dataUser.actions;\nexport default dataUser.reducer;","map":{"version":3,"sources":["/home/linux/Documents/IMIN/AUGUST-04/client/src/store/data.ts"],"names":["createSlice","dataUser","name","initialState","token_keys","user","display","page","currentPage","skip","take","first","active","last","edit_post","infouser","username","updatedAt","title","content","index_post","myPost","reducers","fistPage","state","lastPage","nextPage","previousPage","setDisplay","action","payload","setIndexPost","setMyPost","setEditPost","setDataUser","setTokenKeys","reset","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const dataUser = createSlice({\n\n    name: 'blogs',\n    initialState: {\n        token_keys: {} as object,\n        user: {} as object,\n        display: true as boolean,\n\n        page: {\n            currentPage: 1 as number,\n            skip: 0 as number,\n            take: 4 as number,\n            first: true as boolean,\n            active: true as boolean,\n            last: false as boolean\n        } as any,\n\n        edit_post: {\n            infouser: { username: '' },\n            updatedAt: '',\n            title: '',\n            content: ''\n        } as object,\n\n        index_post: [] as object[],\n        myPost: [[], 0] as any[]\n    },\n\n    reducers: {\n\n        fistPage: state => {\n            state.page.currentPage = 0\n            state.page.skip = (state.page.currentPage * 4) - 4\n        },\n\n        lastPage: state => {\n\n        },\n\n        nextPage: state => {\n            state.page.currentPage += 1\n            state.page.skip = (state.page.currentPage * 4) - 4\n        },\n\n        previousPage: state => {\n            state.page.currentPage -= 1\n            state.page.skip = (state.page.currentPage * 4) - 4\n        },\n\n        setDisplay: (state, action) => {\n            const { payload } = action\n            state.display = payload\n        },\n\n        setIndexPost: (state, action) => {\n            const { payload } = action\n            state.index_post = payload\n        },\n\n        setMyPost: (state, action) => {\n            const { payload } = action\n            state.myPost = payload\n        },\n\n        setEditPost: (state, action) => {\n            const { payload } = action\n            state.edit_post = payload\n        },\n\n        setDataUser: (state, action) => {\n            const { payload } = action\n            state.user = payload\n        },\n\n        setTokenKeys: (state, action) => {\n            const { payload } = action\n            state.token_keys = payload\n        },\n\n        reset: state => {\n            state.user = {}\n            state.token_keys = {}\n            state.myPost = [[], 0]\n        }\n    }\n})\n\nexport const {\n    setDataUser, reset, setIndexPost,\n    setMyPost, setTokenKeys, setEditPost,\n    setDisplay, nextPage, previousPage,\n    fistPage, lastPage\n} = dataUser.actions\n\nexport default dataUser.reducer"]},"metadata":{},"sourceType":"module"}